{
  "openapi": "3.0.3",
  "info": {
    "title": "Pecule API-SS-PSP",
    "version": "0.1"
  },
  "paths": {
    "/projects/cities": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Cities",
        "description": "Cities with a project (in case of real estate)",
        "operationId": "cities",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/projects/next": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project next ID",
        "description": "Get the next project ID (for file upload and file naming purposes)",
        "operationId": "project_next_id",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/count": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Projects count",
        "description": "Number of projects (all if admin, only public ones for the rest)",
        "operationId": "projects_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/meta": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Projects list pagination info",
        "description": "Pagination info for the projects endpoint",
        "operationId": "projects_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/page": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Projects list with pagination info",
        "description": "List projects with pagination info ",
        "operationId": "projects_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/project"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project creation",
        "description": "Create a project",
        "operationId": "create_project",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Projects list",
        "description": "List projects (all if admin, only public ones for the rest)",
        "operationId": "projects",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project update",
        "description": "Update a project",
        "operationId": "update_project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project deletion",
        "description": "Delete a project",
        "operationId": "delete_project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Project",
        "description": "Get a specific project",
        "operationId": "project",
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/upload": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Upload",
        "description": "Upload a file for a project",
        "operationId": "upload",
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/pdf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/campaigns/count": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Project campaigns count",
        "description": "Number of campaigns for a single project (all if admin, only available for the rest)",
        "operationId": "project_campaigns_count",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/campaigns/meta": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Project campaigns pagination info",
        "description": "Pagination info for project campaigns",
        "operationId": "project_campaigns_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/campaigns/page": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Project campaigns with pagination info",
        "description": "List project campaigns with pagination info",
        "operationId": "project_campaigns_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/campaign_with_project_id"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/campaigns": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Project campaigns",
        "description": "List campaigns for a single project (all if admin, only available for the rest)",
        "operationId": "project_campaigns",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/campaign_with_project_id"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/stats": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Project statistics",
        "description": "Number of campaigns, batches available, distinct buyers, amount collected and orders of each kind for a project",
        "operationId": "project_stats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project_stats"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/projects/payouts/view": {
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] View a payout",
        "description": "View a payout without creating it",
        "operationId": "view_payout",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_payout_input"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "project_payout_input",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "project": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9007199254740992
                    },
                    "title": {
                      "type": "string"
                    },
                    "start": {
                      "$ref": "#/components/schemas/date"
                    },
                    "end": {
                      "$ref": "#/components/schemas/date"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "fees": {
                      "type": "number"
                    },
                    "shares": {
                      "$ref": "#/components/schemas/uint"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "title": "unprocessed",
                          "type": "string",
                          "enum": [
                            "unprocessed"
                          ]
                        },
                        {
                          "title": "pending",
                          "type": "object",
                          "properties": {
                            "pending": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/payment_id"
                                },
                                "url": {
                                  "$ref": "#/components/schemas/url"
                                }
                              },
                              "required": [
                                "url",
                                "id"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "pending"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processing",
                          "type": "object",
                          "properties": {
                            "processing": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "$ref": "#/components/schemas/uint"
                                },
                                "transfered": {
                                  "$ref": "#/components/schemas/uint"
                                }
                              },
                              "required": [
                                "transfered",
                                "total"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "processing"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "errored",
                          "type": "object",
                          "properties": {
                            "errored": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "errored"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processed",
                          "type": "object",
                          "properties": {
                            "processed": {
                              "$ref": "#/components/schemas/payment_id",
                              "nullable": true
                            }
                          },
                          "required": [
                            "processed"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user_payout"
                      }
                    }
                  },
                  "required": [
                    "title",
                    "project"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/payouts/create": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project payout",
        "description": "Create a payout for a period without executing it",
        "operationId": "create_payout",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_payout_input"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "project_payout_input",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "project": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9007199254740992
                    },
                    "title": {
                      "type": "string"
                    },
                    "start": {
                      "$ref": "#/components/schemas/date"
                    },
                    "end": {
                      "$ref": "#/components/schemas/date"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "fees": {
                      "type": "number"
                    },
                    "shares": {
                      "$ref": "#/components/schemas/uint"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "title": "unprocessed",
                          "type": "string",
                          "enum": [
                            "unprocessed"
                          ]
                        },
                        {
                          "title": "pending",
                          "type": "object",
                          "properties": {
                            "pending": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/payment_id"
                                },
                                "url": {
                                  "$ref": "#/components/schemas/url"
                                }
                              },
                              "required": [
                                "url",
                                "id"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "pending"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processing",
                          "type": "object",
                          "properties": {
                            "processing": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "$ref": "#/components/schemas/uint"
                                },
                                "transfered": {
                                  "$ref": "#/components/schemas/uint"
                                }
                              },
                              "required": [
                                "transfered",
                                "total"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "processing"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "errored",
                          "type": "object",
                          "properties": {
                            "errored": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "errored"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processed",
                          "type": "object",
                          "properties": {
                            "processed": {
                              "$ref": "#/components/schemas/payment_id",
                              "nullable": true
                            }
                          },
                          "required": [
                            "processed"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user_payout"
                      }
                    }
                  },
                  "required": [
                    "title",
                    "project"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/payouts/{id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Show a payout",
        "description": "Show a created payout (with its status if processing)",
        "operationId": "show_payout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "project_payout_input",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "project": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9007199254740992
                    },
                    "title": {
                      "type": "string"
                    },
                    "start": {
                      "$ref": "#/components/schemas/date"
                    },
                    "end": {
                      "$ref": "#/components/schemas/date"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "fees": {
                      "type": "number"
                    },
                    "shares": {
                      "$ref": "#/components/schemas/uint"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "title": "unprocessed",
                          "type": "string",
                          "enum": [
                            "unprocessed"
                          ]
                        },
                        {
                          "title": "pending",
                          "type": "object",
                          "properties": {
                            "pending": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/payment_id"
                                },
                                "url": {
                                  "$ref": "#/components/schemas/url"
                                }
                              },
                              "required": [
                                "url",
                                "id"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "pending"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processing",
                          "type": "object",
                          "properties": {
                            "processing": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "$ref": "#/components/schemas/uint"
                                },
                                "transfered": {
                                  "$ref": "#/components/schemas/uint"
                                }
                              },
                              "required": [
                                "transfered",
                                "total"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "processing"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "errored",
                          "type": "object",
                          "properties": {
                            "errored": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "errored"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processed",
                          "type": "object",
                          "properties": {
                            "processed": {
                              "$ref": "#/components/schemas/payment_id",
                              "nullable": true
                            }
                          },
                          "required": [
                            "processed"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user_payout"
                      }
                    }
                  },
                  "required": [
                    "title",
                    "project"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Payout deletation",
        "description": "Delete a payout that is not processing or processed",
        "operationId": "delete_payout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/payouts/{id}/process": {
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Process a payout",
        "description": "Start the processing of a payout",
        "operationId": "process_payout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "project_payout_input",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "project": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9007199254740992
                    },
                    "title": {
                      "type": "string"
                    },
                    "start": {
                      "$ref": "#/components/schemas/date"
                    },
                    "end": {
                      "$ref": "#/components/schemas/date"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "fees": {
                      "type": "number"
                    },
                    "shares": {
                      "$ref": "#/components/schemas/uint"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "title": "unprocessed",
                          "type": "string",
                          "enum": [
                            "unprocessed"
                          ]
                        },
                        {
                          "title": "pending",
                          "type": "object",
                          "properties": {
                            "pending": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/payment_id"
                                },
                                "url": {
                                  "$ref": "#/components/schemas/url"
                                }
                              },
                              "required": [
                                "url",
                                "id"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "pending"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processing",
                          "type": "object",
                          "properties": {
                            "processing": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "$ref": "#/components/schemas/uint"
                                },
                                "transfered": {
                                  "$ref": "#/components/schemas/uint"
                                }
                              },
                              "required": [
                                "transfered",
                                "total"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "processing"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "errored",
                          "type": "object",
                          "properties": {
                            "errored": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "errored"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "title": "processed",
                          "type": "object",
                          "properties": {
                            "processed": {
                              "$ref": "#/components/schemas/payment_id",
                              "nullable": true
                            }
                          },
                          "required": [
                            "processed"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user_payout"
                      }
                    }
                  },
                  "required": [
                    "title",
                    "project"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/payouts/{id}/processed": {
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Set a payout as processed",
        "description": "Set a payout as processed (in case in it is not implemented)",
        "operationId": "set_payout_processed",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/payouts/meta": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project payouts pagination info",
        "description": "Pagination info for the payouts of a project",
        "operationId": "project_payouts_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/count": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project payouts count",
        "description": "Number of payouts for a project",
        "operationId": "project_payouts_count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/payouts/page": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project payouts with pagination ingo",
        "description": "List payouts for a project with pagination info",
        "operationId": "project_payouts_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "title": "project_payout_input",
                        "type": "object",
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "project": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740992
                          },
                          "title": {
                            "type": "string"
                          },
                          "start": {
                            "$ref": "#/components/schemas/date"
                          },
                          "end": {
                            "$ref": "#/components/schemas/date"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "fees": {
                            "type": "number"
                          },
                          "shares": {
                            "$ref": "#/components/schemas/uint"
                          },
                          "status": {
                            "oneOf": [
                              {
                                "title": "unprocessed",
                                "type": "string",
                                "enum": [
                                  "unprocessed"
                                ]
                              },
                              {
                                "title": "pending",
                                "type": "object",
                                "properties": {
                                  "pending": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "$ref": "#/components/schemas/payment_id"
                                      },
                                      "url": {
                                        "$ref": "#/components/schemas/url"
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "pending"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "processing",
                                "type": "object",
                                "properties": {
                                  "processing": {
                                    "type": "object",
                                    "properties": {
                                      "total": {
                                        "$ref": "#/components/schemas/uint"
                                      },
                                      "transfered": {
                                        "$ref": "#/components/schemas/uint"
                                      }
                                    },
                                    "required": [
                                      "transfered",
                                      "total"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "processing"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "errored",
                                "type": "object",
                                "properties": {
                                  "errored": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "errored"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "title": "processed",
                                "type": "object",
                                "properties": {
                                  "processed": {
                                    "$ref": "#/components/schemas/payment_id",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "processed"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "users": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/id"
                            }
                          }
                        },
                        "required": [
                          "title",
                          "project"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/projects/{id}/payouts": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "[admin] Project payouts",
        "description": "List payouts for a project",
        "operationId": "project_payouts",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "project_payout_input",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "project": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9007199254740992
                      },
                      "title": {
                        "type": "string"
                      },
                      "start": {
                        "$ref": "#/components/schemas/date"
                      },
                      "end": {
                        "$ref": "#/components/schemas/date"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "fees": {
                        "type": "number"
                      },
                      "shares": {
                        "$ref": "#/components/schemas/uint"
                      },
                      "status": {
                        "oneOf": [
                          {
                            "title": "unprocessed",
                            "type": "string",
                            "enum": [
                              "unprocessed"
                            ]
                          },
                          {
                            "title": "pending",
                            "type": "object",
                            "properties": {
                              "pending": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "$ref": "#/components/schemas/payment_id"
                                  },
                                  "url": {
                                    "$ref": "#/components/schemas/url"
                                  }
                                },
                                "required": [
                                  "url",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "pending"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "processing",
                            "type": "object",
                            "properties": {
                              "processing": {
                                "type": "object",
                                "properties": {
                                  "total": {
                                    "$ref": "#/components/schemas/uint"
                                  },
                                  "transfered": {
                                    "$ref": "#/components/schemas/uint"
                                  }
                                },
                                "required": [
                                  "transfered",
                                  "total"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "processing"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "errored",
                            "type": "object",
                            "properties": {
                              "errored": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "errored"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "title": "processed",
                            "type": "object",
                            "properties": {
                              "processed": {
                                "$ref": "#/components/schemas/payment_id",
                                "nullable": true
                              }
                            },
                            "required": [
                              "processed"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "users": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/id"
                        }
                      }
                    },
                    "required": [
                      "title",
                      "project"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/count": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaigns count",
        "description": "Number of campaigns (all if admin, only available ones for the rest)",
        "operationId": "campaigns_count",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/meta": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaigns pagination info",
        "description": "Pagination info for campaigns",
        "operationId": "campaigns_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/page": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaigns with pagination info",
        "description": "List campaigns with pagination info",
        "operationId": "campaigns_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/campaign_with_project"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign creation",
        "description": "Create a campaign",
        "operationId": "create_campaign",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/campaign_input"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaigns",
        "description": "List campaigns (all if admin, only available ones for the rest)",
        "operationId": "campaigns",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "campaign status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "available",
                  "canceled",
                  "closed",
                  "minted"
                ]
              }
            }
          },
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/campaign_with_project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/stats": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaigns statistics",
        "description": "Get number of campaigns in each status as well as the total currency collected",
        "operationId": "campaigns_stats",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/campaigns_stats"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/collected": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaigns collected amount",
        "description": "Get collected amount by campaign",
        "operationId": "campaigns_collected",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "start": {
                        "$ref": "#/components/schemas/date"
                      },
                      "collected": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "collected",
                      "start",
                      "name"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/users/count": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaign users count",
        "description": "Number of distinct buyers for a campaign",
        "operationId": "campaign_users_count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/campaigns/{id}": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign update",
        "description": "Update a campaign",
        "operationId": "update_campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/campaign_input"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaign",
        "description": "Get a specific campaign",
        "operationId": "campaign",
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/campaign_with_project"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign deletion",
        "description": "Delete a campaign",
        "operationId": "delete_campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/mint": {
      "put": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign mint",
        "description": "Mint a campaign",
        "operationId": "mint_campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mint_status"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/mint/status": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign mint status",
        "description": "Get the status of a mint",
        "operationId": "mint_status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mint_status"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/orders/count": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign orders count",
        "description": "Number of orders for a campaign",
        "operationId": "campaign_orders_count",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/orders/meta": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign orders pagination info",
        "description": "Pagination info for campaign orders",
        "operationId": "campaign_orders_meta",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/orders/page": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign orders with pagination info",
        "description": "List orders for a campaign with pagination info",
        "operationId": "campaign_orders_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/order_with_user"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/orders": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "[admin] Campaign orders",
        "description": "List orders for a campaign",
        "operationId": "campaign_orders",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_with_user"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/campaigns/{id}/stats": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "Campaign statistics",
        "description": "Number orders of each status and number of distinct buyers for a campaign",
        "operationId": "campaign_stats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/campaign_stats"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/campaigns/{id}/order": {
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Order creation",
        "description": "Create an order",
        "operationId": "create_order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uint"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order_with_ids"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}/documents": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Order documents",
        "description": "List order documents",
        "operationId": "order_documents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}/execute": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Order execution",
        "description": "Execute an order",
        "operationId": "execute_order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order_with_ids"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}/cancel": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "cancel_order",
        "operationId": "cancel_order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}/refund": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Order refund",
        "description": "Refund an order",
        "operationId": "refund_order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/{id}": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "[admin] Order update",
        "description": "Update manually an order",
        "operationId": "update_order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/order_with_ids"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "[admin] Order deletion",
        "description": "Delete an order",
        "operationId": "delete_order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Order",
        "description": "Get a specific order",
        "operationId": "order",
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order_with_ids"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/count": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Orders count",
        "description": "Number of orders (if admin all orders, else only the user orders)",
        "operationId": "orders_count",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/meta": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Orders pagination info",
        "description": "Pagination info for orders",
        "operationId": "orders_meta",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/page": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Orders with pagination info",
        "description": "List orders with pagination info",
        "operationId": "orders_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/order_with_user_email"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Orders",
        "description": "List orders (if admin all orders, else only the user orders)",
        "operationId": "orders",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_with_user_email"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/init": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "User initialization",
        "description": "Initialize a user",
        "operationId": "initialize_user",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "company",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "enum": [
                          "company"
                        ]
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "siren": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "address": {
                        "$ref": "#/components/schemas/user_address"
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "qualified": {
                        "type": "boolean"
                      },
                      "kyc": {
                        "$ref": "#/components/schemas/kyc_kind"
                      }
                    },
                    "required": [
                      "kyc",
                      "country",
                      "siren",
                      "company_name",
                      "kind"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "individual",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "enum": [
                          "individual"
                        ]
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "birth_country": {
                        "type": "string"
                      },
                      "birth_city": {
                        "type": "string"
                      },
                      "birthday": {
                        "$ref": "#/components/schemas/date"
                      },
                      "nationality": {
                        "type": "string"
                      },
                      "residence_country": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "address": {
                        "$ref": "#/components/schemas/user_address"
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "qualified": {
                        "type": "boolean"
                      },
                      "kyc": {
                        "$ref": "#/components/schemas/kyc_kind"
                      }
                    },
                    "required": [
                      "kyc",
                      "residence_country",
                      "nationality",
                      "birthday",
                      "birth_city",
                      "birth_country",
                      "last_name",
                      "first_name",
                      "kind"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_with_id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/create": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User creation",
        "description": "Create a user from its info",
        "operationId": "create_user",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "company",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "enum": [
                          "company"
                        ]
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "siren": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "address": {
                        "$ref": "#/components/schemas/user_address"
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "qualified": {
                        "type": "boolean"
                      },
                      "kyc": {
                        "$ref": "#/components/schemas/kyc_kind"
                      },
                      "email": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "email",
                      "kyc",
                      "country",
                      "siren",
                      "company_name",
                      "kind"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "individual",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "enum": [
                          "individual"
                        ]
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "birth_country": {
                        "type": "string"
                      },
                      "birth_city": {
                        "type": "string"
                      },
                      "birthday": {
                        "$ref": "#/components/schemas/date"
                      },
                      "nationality": {
                        "type": "string"
                      },
                      "residence_country": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "address": {
                        "$ref": "#/components/schemas/user_address"
                      },
                      "attributes": {
                        "type": "object"
                      },
                      "qualified": {
                        "type": "boolean"
                      },
                      "kyc": {
                        "$ref": "#/components/schemas/kyc_kind"
                      },
                      "email": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "email",
                      "kyc",
                      "residence_country",
                      "nationality",
                      "birthday",
                      "birth_city",
                      "birth_country",
                      "last_name",
                      "first_name",
                      "kind"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_with_id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/payout": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "User payout",
        "description": "Add payout information for a user",
        "operationId": "user_payout",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payment_user_payout"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_with_id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/kyc": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "User KYC",
        "description": "Force reset KYC information for a user (only useful if failed)",
        "operationId": "kyc_user",
        "parameters": [],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/info": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "User info",
        "description": "Get user information",
        "operationId": "user_info",
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_with_email"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{id}/stats": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User statistics",
        "description": "User statistics by projects (campaigns, orders, investement)",
        "operationId": "user_stats",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_stats"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/info/stats": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User statistics",
        "description": "User statistics by projects (campaigns, orders, investement)",
        "operationId": "user_info_stats",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_stats"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User info",
        "description": "Get user information from its id",
        "operationId": "user",
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_with_email"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User update",
        "description": "Update user information",
        "operationId": "update_user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_with_id"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User deletion",
        "description": "Delete a user",
        "operationId": "delete_user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/stats": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] Users statistics",
        "description": "Users statistics by status",
        "operationId": "users_stats",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users_stats"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/count": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] Users count",
        "description": "Number of users",
        "operationId": "users_count",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/user_status"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "lists",
            "in": "query",
            "description": "lists concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/meta": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] Users pagination info",
        "description": "Pagination info for users",
        "operationId": "users_meta",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/user_status"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lists",
            "in": "query",
            "description": "lists concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/page": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] Users with pagination info",
        "description": "List users with pagination info",
        "operationId": "users_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/user_status"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "id",
                    "creation",
                    "name",
                    "age",
                    "status"
                  ]
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "lists",
            "in": "query",
            "description": "lists concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user_with_email"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] Users",
        "description": "List users",
        "operationId": "users",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/user_status"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "id",
                    "creation",
                    "name",
                    "age",
                    "status"
                  ]
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "lists",
            "in": "query",
            "description": "lists concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user_with_email"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/payin": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "User payin",
        "description": "Create a payin request",
        "operationId": "payin",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payment_payin_info"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_payin"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/transfers": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User transfers",
        "description": "Get user transactions",
        "operationId": "transfers",
        "parameters": [],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/payment_transfer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/wallet": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User wallet",
        "description": "Get user wallet",
        "operationId": "wallet",
        "parameters": [],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_wallet"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/orders/count": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User orders count",
        "description": "Number of orders for a user",
        "operationId": "user_orders_count",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "user id for admin",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/orders/meta": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User orders pagination info",
        "description": "Pagination info for user orders",
        "operationId": "user_orders_meta",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "user id for admin",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/orders/page": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User orders with pagination",
        "description": "List orders for a user with pagination info",
        "operationId": "user_orders_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "user id for admin",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/order_with_user_id"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/orders": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User orders",
        "description": "List orders for a user",
        "operationId": "user_orders",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "user id for admin",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_with_user_id"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/documents/count": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User documents count",
        "description": "Number of documents of a user",
        "operationId": "user_documents_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/documents/meta": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User documents pagination info",
        "description": "Pagination info for user documents",
        "operationId": "user_documents_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/documents/page": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User documents with pagination info",
        "description": "List user documents with pagination info",
        "operationId": "user_documents_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/order_documents"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/documents": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User documents",
        "description": "List user documents",
        "operationId": "user_documents",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_documents"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/documents/{kind}/{signature_id}/{signature_document_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Document download",
        "description": "Download the document of a user",
        "operationId": "user_document_download",
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signature_document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {}
            }
          }
        },
        "security": []
      }
    },
    "/users/projects/count": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User projects count",
        "description": "Number of projects a user invested in",
        "operationId": "user_projects_count",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/projects/meta": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User projects pagination info",
        "description": "Pagination info for projects of a user",
        "operationId": "user_projects_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/projects/page": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User projects with pagination info",
        "description": "List of projects a user invested in with pagination info",
        "operationId": "user_projects_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/project_with_campaigns"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/projects": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User projects",
        "description": "List of projects a user invested in",
        "operationId": "user_projects",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "order status concatenated with a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "valid",
                  "executed",
                  "refunded",
                  "rejected"
                ]
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project_with_campaigns"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/email": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "send_email",
        "operationId": "send_email",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "dst": {
                    "type": "string"
                  }
                },
                "required": [
                  "content",
                  "subject"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{id}/link": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "link_email",
        "operationId": "link_email",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/list/{list}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User list deletion",
        "description": "Delete a user list",
        "operationId": "delete_user_list",
        "parameters": [
          {
            "name": "list",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/list": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User list creation",
        "description": "Create a user list",
        "operationId": "create_user_list",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] User lists",
        "description": "List user lists",
        "operationId": "user_lists",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{id}/list/{list}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "[admin] Add user to list",
        "description": "Add a user to a specified list",
        "operationId": "add_user_list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          {
            "name": "list",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "[admin] Remove user from list",
        "description": "Remove a user from a specified list",
        "operationId": "remove_user_list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          {
            "name": "list",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/votes/count": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User votes count",
        "description": "Number of votes of a user",
        "operationId": "user_votes_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/votes/page": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User votes with pagination",
        "description": "List votes for a user with pagination info",
        "operationId": "user_votes_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user_vote"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/votes": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "User votes",
        "description": "List votes for a user",
        "operationId": "user_votes",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user_vote"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/votes/{id}": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "User vote",
        "description": "Register a vote for a poll from a user",
        "operationId": "user_vote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vote_input"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/config/update": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "[admin] Update config",
        "description": "Set some configuration (admin only)",
        "operationId": "update_config",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/update_config"
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/config": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "[admin] Initialize",
        "description": "Initialize a deployment for a client",
        "operationId": "initialize",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/config"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": []
      },
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "[admin] Config",
        "description": "See the configuration for a deployment (admin only)",
        "operationId": "config",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/config"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/info": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Info",
        "description": "Client info",
        "operationId": "info",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/client_info"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/tenant/{id}": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "[admin] Add tenant",
        "description": "Add a tenant",
        "operationId": "add_tenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/openapi": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Openapi",
        "description": "Get openapi json",
        "operationId": "openapi",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": []
      }
    },
    "/swagger": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Swagger",
        "description": "Swagger page",
        "operationId": "swagger",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/html": {}
            }
          }
        },
        "security": []
      }
    },
    "/version": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Version",
        "description": "Commit hash ",
        "operationId": "version",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {}
            }
          }
        },
        "security": []
      }
    },
    "/token": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "auth_token",
        "operationId": "auth_token",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/data": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "[admin] Data addition",
        "description": "Add some generic data",
        "operationId": "add_data",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "data": {},
                  "kind": {
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/data/manage/{id}": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "[admin] Data update",
        "description": "Update some generic data",
        "operationId": "update_data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "data": {},
                  "kind": {
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "data"
        ],
        "summary": "[admin] Data deletion",
        "description": "Delete some generic data",
        "operationId": "delete_data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/data/kinds": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Data kinds",
        "description": "List different kinds of data",
        "operationId": "data_kinds",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/data/{kind}/count": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Data count",
        "description": "Number of data for a specific kind",
        "operationId": "data_count",
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/data/{kind}/meta": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Data pagination info",
        "description": "Pagination info for data of a specific kind",
        "operationId": "data_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/data/{kind}/page": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Data with pagination info",
        "description": "List data for a specific kind with pagination info",
        "operationId": "data_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "data": {},
                          "kind": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/data/{kind}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Data",
        "description": "List data for a specific kind",
        "operationId": "data",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "data": {},
                      "kind": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "kind",
                      "data"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/hooks/kyc": {
      "post": {
        "tags": [
          "hooks"
        ],
        "summary": "KYC Hook",
        "description": "Hook endpoint for KYC events",
        "operationId": "kyc_hook",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kyc_hook"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": []
      }
    },
    "/hooks/signature.json": {
      "post": {
        "tags": [
          "hooks"
        ],
        "summary": "Signature Hook",
        "description": "Hook endpoint for signature events",
        "operationId": "signature_hook",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/signature_hook"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": []
      }
    },
    "/hooks/payment": {
      "post": {
        "tags": [
          "hooks"
        ],
        "summary": "Payment Hook",
        "description": "Hook endpoint for payment events",
        "operationId": "payment_hook",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplemented"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": []
      }
    },
    "/polls/{id}": {
      "post": {
        "tags": [
          "polls"
        ],
        "summary": "[admin] Poll update",
        "description": "Update a poll",
        "operationId": "update_poll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/poll"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "polls"
        ],
        "summary": "[admin] Poll deletion",
        "description": "Delete a poll",
        "operationId": "delete_poll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "Poll",
        "description": "Get a specific poll",
        "operationId": "poll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/poll"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/polls/count": {
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "Polls count",
        "description": "Number of polls",
        "operationId": "polls_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/polls/meta": {
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "Polls pagination info",
        "description": "Pagination info for polls",
        "operationId": "polls_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/polls/page": {
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "Polls with pagination info",
        "description": "List polls with pagination info",
        "operationId": "polls_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/poll"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/polls": {
      "post": {
        "tags": [
          "polls"
        ],
        "summary": "[admin] Poll creation",
        "description": "Create a poll",
        "operationId": "create_poll",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/poll"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "Polls",
        "description": "List polls",
        "operationId": "polls",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/poll"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/polls/{id}/votes/count": {
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "[admin] Poll votes count",
        "description": "Number of votes for a poll",
        "operationId": "poll_votes_count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/polls/{id}/votes/page": {
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "[admin] Poll votes with pagination",
        "description": "List votes for a poll with pagination info",
        "operationId": "poll_votes_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/poll_vote"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/polls/{id}/votes": {
      "get": {
        "tags": [
          "polls"
        ],
        "summary": "[admin] Poll votes",
        "description": "List votes for a poll",
        "operationId": "poll_votes",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/poll_vote"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/operations/{hash}": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain operation",
        "description": "Retrieve the blockchain operation info from the hash",
        "operationId": "operation",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string"
                    },
                    "kind": {
                      "$ref": "#/components/schemas/operation_kind"
                    },
                    "status": {
                      "$ref": "#/components/schemas/operation_status"
                    }
                  },
                  "required": [
                    "status",
                    "kind",
                    "hash"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/operations/meta": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain operations pagination info",
        "description": "Pagination info for blockchain operations",
        "operationId": "operations_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/operations/page": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain operations with pagination info",
        "description": "List blockchain operations with pagination info",
        "operationId": "operations_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string"
                          },
                          "kind": {
                            "$ref": "#/components/schemas/operation_kind"
                          },
                          "status": {
                            "$ref": "#/components/schemas/operation_status"
                          }
                        },
                        "required": [
                          "status",
                          "kind",
                          "hash"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/operations/count": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain operations count",
        "description": "Number of blockchain operations",
        "operationId": "operations_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/operations": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain operations",
        "description": "List blockchain operations",
        "operationId": "operations",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hash": {
                        "type": "string"
                      },
                      "kind": {
                        "$ref": "#/components/schemas/operation_kind"
                      },
                      "status": {
                        "$ref": "#/components/schemas/operation_status"
                      }
                    },
                    "required": [
                      "status",
                      "kind",
                      "hash"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/updates/{id}": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain update",
        "description": "Retrieve the blockchain update from its id",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "operation": {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string"
                        },
                        "kind": {
                          "$ref": "#/components/schemas/operation_kind"
                        },
                        "status": {
                          "$ref": "#/components/schemas/operation_status"
                        }
                      },
                      "required": [
                        "status",
                        "kind",
                        "hash"
                      ],
                      "additionalProperties": false
                    },
                    "index": {
                      "$ref": "#/components/schemas/uint"
                    },
                    "data": {},
                    "diff": {},
                    "token": {
                      "$ref": "#/components/schemas/token_id"
                    },
                    "account": {
                      "type": "string"
                    },
                    "prev": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "data",
                    "index",
                    "operation",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/updates/meta": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain updates pagination info",
        "description": "Pagination info for blockchain updates",
        "operationId": "updates_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/updates/page": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain updates with pagination info",
        "description": "List blockchain updates with pagination info",
        "operationId": "updates_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "operation": {
                            "type": "object",
                            "properties": {
                              "hash": {
                                "type": "string"
                              },
                              "kind": {
                                "$ref": "#/components/schemas/operation_kind"
                              },
                              "status": {
                                "$ref": "#/components/schemas/operation_status"
                              }
                            },
                            "required": [
                              "status",
                              "kind",
                              "hash"
                            ],
                            "additionalProperties": false
                          },
                          "index": {
                            "$ref": "#/components/schemas/uint"
                          },
                          "data": {},
                          "diff": {},
                          "token": {
                            "$ref": "#/components/schemas/token_id"
                          },
                          "account": {
                            "type": "string"
                          },
                          "prev": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "data",
                          "index",
                          "operation",
                          "id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/updates/count": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain updates count",
        "description": "Number of blockchain updates",
        "operationId": "updates_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/updates": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain updates",
        "description": "List blockchain updates",
        "operationId": "updates",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "operation": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string"
                          },
                          "kind": {
                            "$ref": "#/components/schemas/operation_kind"
                          },
                          "status": {
                            "$ref": "#/components/schemas/operation_status"
                          }
                        },
                        "required": [
                          "status",
                          "kind",
                          "hash"
                        ],
                        "additionalProperties": false
                      },
                      "index": {
                        "$ref": "#/components/schemas/uint"
                      },
                      "data": {},
                      "diff": {},
                      "token": {
                        "$ref": "#/components/schemas/token_id"
                      },
                      "account": {
                        "type": "string"
                      },
                      "prev": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "data",
                      "index",
                      "operation",
                      "id"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/injections/{id}": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain injection",
        "description": "Retrieve the blockchain injection information and status from its id",
        "operationId": "injection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "operation": {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string"
                        },
                        "kind": {
                          "$ref": "#/components/schemas/operation_kind"
                        },
                        "status": {
                          "$ref": "#/components/schemas/operation_status"
                        }
                      },
                      "required": [
                        "status",
                        "kind",
                        "hash"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "inputs": {}
                  },
                  "required": [
                    "inputs",
                    "operation",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/injections/meta": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain injections pagination info",
        "description": "Pagination info for blockchain injections",
        "operationId": "injections_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/injections/page": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain injections with pagination info",
        "description": "List blockchain injections with pagination info",
        "operationId": "injections_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "operation": {
                            "type": "object",
                            "properties": {
                              "hash": {
                                "type": "string"
                              },
                              "kind": {
                                "$ref": "#/components/schemas/operation_kind"
                              },
                              "status": {
                                "$ref": "#/components/schemas/operation_status"
                              }
                            },
                            "required": [
                              "status",
                              "kind",
                              "hash"
                            ],
                            "additionalProperties": false,
                            "nullable": true
                          },
                          "inputs": {}
                        },
                        "required": [
                          "inputs",
                          "operation",
                          "id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/injections/count": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain injections count",
        "description": "Number of blockchain injections",
        "operationId": "injections_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/injections": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain injections",
        "description": "List blockchain injections",
        "operationId": "injections",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "operation": {
                        "type": "object",
                        "properties": {
                          "hash": {
                            "type": "string"
                          },
                          "kind": {
                            "$ref": "#/components/schemas/operation_kind"
                          },
                          "status": {
                            "$ref": "#/components/schemas/operation_status"
                          }
                        },
                        "required": [
                          "status",
                          "kind",
                          "hash"
                        ],
                        "additionalProperties": false,
                        "nullable": true
                      },
                      "inputs": {}
                    },
                    "required": [
                      "inputs",
                      "operation",
                      "id"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/tokens/{id}": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain token",
        "description": "Retrieve the information for a blockchain token",
        "operationId": "token",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/token_with_metadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/tokens/meta": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain tokens pagination info",
        "description": "Pagination info for blockchain tokens",
        "operationId": "tokens_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/tokens/page": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain tokens with pagination info",
        "description": "List blockchain tokens with pagination info",
        "operationId": "tokens_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/token_with_metadata"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/tokens/count": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain tokens count",
        "description": "Number of blockchain tokens",
        "operationId": "tokens_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/tokens": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain tokens",
        "description": "List blockchain tokens",
        "operationId": "tokens",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/token_with_metadata"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/accounts/{hash}": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain account",
        "description": "Retrieve the information of a blockchain account from its address",
        "operationId": "account",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "address": {
                      "type": "string"
                    },
                    "whitelisted": {
                      "type": "boolean"
                    },
                    "update": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "update",
                    "whitelisted",
                    "address",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/accounts/meta": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain accounts pagination info",
        "description": "Pagination info for blockchain accounts",
        "operationId": "accounts_meta",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/accounts/page": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain accounts with pagination info",
        "description": "List blockchain accounts with pagination info",
        "operationId": "accounts_page",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "address": {
                            "type": "string"
                          },
                          "whitelisted": {
                            "type": "boolean"
                          },
                          "update": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "update",
                          "whitelisted",
                          "address",
                          "id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/page_meta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/page_links"
                    }
                  },
                  "required": [
                    "links",
                    "meta"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/accounts/count": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain accounts count",
        "description": "Number of blockchain accounts",
        "operationId": "accounts_count",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/accounts": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Blockchain accounts",
        "description": "List blockchain accounts",
        "operationId": "accounts",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "address": {
                        "type": "string"
                      },
                      "whitelisted": {
                        "type": "boolean"
                      },
                      "update": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "update",
                      "whitelisted",
                      "address",
                      "id"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/dumps/{date}": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Blockchain dump",
        "description": "Retrieve a dump of assets at a certain date",
        "operationId": "dump",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dump"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/head": {
      "get": {
        "tags": [
          "blockchain"
        ],
        "summary": "Indexer head",
        "description": "Give the level of the head of the indexer",
        "operationId": "head",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uint"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/blockchain/inject": {
      "post": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Blockchain injection",
        "description": "Inject an operation",
        "operationId": "inject",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "$ref": "#/components/schemas/inject_input"
                  },
                  "kind": {
                    "$ref": "#/components/schemas/operation_kind"
                  }
                },
                "required": [
                  "kind",
                  "input"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/deploy": {
      "post": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Blockchain deploy",
        "description": "Deploy a contract: managed account, whitelist contract or assets contract",
        "operationId": "deploy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "config_contract_kind",
                    "type": "string",
                    "enum": [
                      "asset",
                      "whitelist"
                    ]
                  },
                  {
                    "title": "managed",
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/whitelist": {
      "post": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Blockchain whitelist",
        "description": "Whitelist a list of blockchain addresses",
        "operationId": "whitelist",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "whitelist": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "whitelist",
                    "address"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/mint": {
      "post": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Blockchain mint",
        "description": "Mint a token",
        "operationId": "mint",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "account": {
                          "type": "string"
                        },
                        "balance": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "balance",
                        "account"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "id": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9007199254740992
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "required": [
                  "assets"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/transfer": {
      "post": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Blockchain transfer",
        "description": "Transfer some amount of a token",
        "operationId": "transfer",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9007199254740992
                  },
                  "src": {
                    "type": "string"
                  },
                  "dst": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "dst",
                  "src",
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/set_metadata": {
      "post": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Blockchain set metadata",
        "description": "Set the metadata of a token",
        "operationId": "set_metadata",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9007199254740992
                  },
                  "url": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "required": [
                  "url",
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "hash",
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/blockchain/upload": {
      "post": {
        "tags": [
          "blockchain"
        ],
        "summary": "[admin] Ipfs upload",
        "description": "Upload some data on ipfs",
        "operationId": "ipfs_upload",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/url"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "oneOf": [
          {
            "title": "request_error",
            "type": "object",
            "properties": {
              "request_error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "data": {},
                  "origin": {
                    "type": "string"
                  }
                },
                "required": [
                  "origin",
                  "data",
                  "code"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "request_error"
            ],
            "additionalProperties": false
          },
          {
            "title": "a_w_s_error",
            "type": "object",
            "properties": {
              "a_w_s_error": {
                "type": "string"
              }
            },
            "required": [
              "a_w_s_error"
            ],
            "additionalProperties": false
          },
          {
            "title": "tz_error",
            "type": "object",
            "properties": {
              "tz_error": {
                "$ref": "#/components/schemas/tzfunc_error"
              }
            },
            "required": [
              "tz_error"
            ],
            "additionalProperties": false
          },
          {
            "title": "eth_error",
            "type": "object",
            "properties": {
              "eth_error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "message": {
                    "type": "string"
                  },
                  "data": {
                    "type": "string"
                  }
                },
                "required": [
                  "message",
                  "code"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "eth_error"
            ],
            "additionalProperties": false
          },
          {
            "title": "failed_transfer",
            "type": "object",
            "properties": {
              "failed_transfer": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "failed_transfer"
            ],
            "additionalProperties": false
          },
          {
            "title": "no_k_y_c_info",
            "type": "object",
            "properties": {
              "no_k_y_c_info": {
                "type": "string"
              }
            },
            "required": [
              "no_k_y_c_info"
            ],
            "additionalProperties": false
          },
          {
            "title": "failed_signature_creation",
            "type": "string",
            "enum": [
              "failed_signature_creation"
            ]
          }
        ]
      },
      "BadRequest": {
        "oneOf": [
          {
            "title": "bad_request",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "bad_request": {
                    "type": "string"
                  }
                },
                "required": [
                  "bad_request"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "enum": [
                      "Destruct exception"
                    ]
                  },
                  "exception": {
                    "type": "string"
                  }
                },
                "required": [
                  "exception",
                  "error"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "msg": {
                    "type": "string"
                  }
                },
                "required": [
                  "msg",
                  "path",
                  "error"
                ],
                "additionalProperties": false
              }
            ]
          }
        ]
      },
      "Conflict": {
        "oneOf": [
          {
            "title": "no_config",
            "type": "object",
            "properties": {
              "no_config": {
                "type": "string"
              }
            },
            "required": [
              "no_config"
            ],
            "additionalProperties": false
          },
          {
            "title": "no_module",
            "type": "object",
            "properties": {
              "no_module": {
                "type": "string"
              }
            },
            "required": [
              "no_module"
            ],
            "additionalProperties": false
          },
          {
            "title": "key_not_found",
            "type": "object",
            "properties": {
              "key_not_found": {
                "type": "string"
              }
            },
            "required": [
              "key_not_found"
            ],
            "additionalProperties": false
          },
          {
            "title": "no_admin",
            "type": "string",
            "enum": [
              "no_admin"
            ]
          },
          {
            "title": "missing_contract",
            "type": "object",
            "properties": {
              "missing_contract": {
                "type": "string"
              }
            },
            "required": [
              "missing_contract"
            ],
            "additionalProperties": false
          },
          {
            "title": "wrong_mint",
            "type": "string",
            "enum": [
              "wrong_mint"
            ]
          },
          {
            "title": "register_constant_fail",
            "type": "string",
            "enum": [
              "register_constant_fail"
            ]
          },
          {
            "title": "metadata_error",
            "type": "object",
            "properties": {
              "metadata_error": {
                "type": "string"
              }
            },
            "required": [
              "metadata_error"
            ],
            "additionalProperties": false
          }
        ]
      },
      "Forbidden": {
        "oneOf": [
          {
            "title": "forbidden",
            "type": "object",
            "properties": {
              "forbidden": {
                "type": "string"
              }
            },
            "required": [
              "forbidden"
            ],
            "additionalProperties": false
          }
        ]
      },
      "InternalServerError": {
        "oneOf": [
          {
            "title": "exn",
            "type": "object",
            "properties": {
              "exn": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "content",
                  "name",
                  "id"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "exn"
            ],
            "additionalProperties": false
          },
          {
            "title": "server_error",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "server_error": {
                    "type": "string"
                  }
                },
                "required": [
                  "server_error"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "enum": [
                      "Server Error"
                    ]
                  },
                  "msg": {
                    "type": "string"
                  }
                },
                "required": [
                  "msg",
                  "error"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "enum": [
                      "Server Error"
                    ]
                  },
                  "digest": {
                    "type": "string"
                  }
                },
                "required": [
                  "digest",
                  "error"
                ],
                "additionalProperties": false
              }
            ]
          },
          {
            "title": "destruct_error",
            "type": "object",
            "properties": {
              "destruct_error": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "content",
                  "name",
                  "id"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "destruct_error"
            ],
            "additionalProperties": false
          },
          {
            "title": "pg_error",
            "type": "object",
            "properties": {
              "pg_error": {
                "type": "string"
              }
            },
            "required": [
              "pg_error"
            ],
            "additionalProperties": false
          },
          {
            "title": "psql_error",
            "type": "object",
            "properties": {
              "psql_error": {
                "type": "object",
                "properties": {
                  "msg": {
                    "type": "string"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "error": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "error",
                        "code"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "fields",
                  "msg"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "psql_error"
            ],
            "additionalProperties": false
          },
          {
            "title": "pg_exn",
            "type": "object",
            "properties": {
              "pg_exn": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "name": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "content",
                  "name",
                  "id"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "pg_exn"
            ],
            "additionalProperties": false
          },
          {
            "title": "insert_error",
            "type": "string",
            "enum": [
              "insert_error"
            ]
          },
          {
            "title": "index_error",
            "type": "string",
            "enum": [
              "index_error"
            ]
          },
          {
            "title": "unix_error",
            "type": "object",
            "properties": {
              "unix_error": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "funct": {
                    "type": "string"
                  },
                  "param": {
                    "type": "string"
                  }
                },
                "required": [
                  "param",
                  "funct",
                  "name"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "unix_error"
            ],
            "additionalProperties": false
          }
        ]
      },
      "NotFound": {
        "oneOf": [
          {
            "title": "not_found",
            "type": "object",
            "properties": {
              "not_found": {
                "type": "string"
              }
            },
            "required": [
              "not_found"
            ],
            "additionalProperties": false
          }
        ]
      },
      "NotImplemented": {
        "oneOf": [
          {
            "title": "not_implemented",
            "type": "object",
            "properties": {
              "not_implemented": {
                "type": "string"
              }
            },
            "required": [
              "not_implemented"
            ],
            "additionalProperties": false
          }
        ]
      },
      "Unauthorized": {
        "oneOf": [
          {
            "title": "unauthorized",
            "type": "object",
            "properties": {
              "unauthorized": {
                "type": "string"
              }
            },
            "required": [
              "unauthorized"
            ],
            "additionalProperties": false
          }
        ]
      },
      "address": {
        "title": "mangopay_address",
        "type": "object",
        "properties": {
          "AddressLine1": {
            "type": "string",
            "nullable": true
          },
          "AddressLine2": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "$ref": "#/components/schemas/country_iso",
            "nullable": true
          }
        }
      },
      "auth_id": {
        "type": "string"
      },
      "balance_update": {
        "title": "balance_updates",
        "oneOf": [
          {
            "title": "contract",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "contract"
                ]
              },
              "contract": {
                "$ref": "#/components/schemas/contract"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "contract",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "legacy_rewards",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "freezer"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "legacy_rewards"
                ]
              },
              "delegate": {
                "$ref": "#/components/schemas/pkh"
              },
              "cycle": {
                "$ref": "#/components/schemas/uint32"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "cycle",
              "delegate",
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "legacy_fees",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "freezer"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "legacy_fees"
                ]
              },
              "delegate": {
                "$ref": "#/components/schemas/pkh"
              },
              "cycle": {
                "$ref": "#/components/schemas/uint32"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "cycle",
              "delegate",
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "legacy_deposits",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "freezer"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "legacy_deposits"
                ]
              },
              "delegate": {
                "$ref": "#/components/schemas/pkh"
              },
              "cycle": {
                "$ref": "#/components/schemas/uint32"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "cycle",
              "delegate",
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "deposits",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "freezer"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "deposits"
                ]
              },
              "delegate": {
                "$ref": "#/components/schemas/pkh"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "delegate",
              "category",
              "kind",
              "change"
            ]
          },
          {
            "title": "accumulator",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "accumulator"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "block fees"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "nonce_revelation_rewards",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "minted"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "nonce revelation rewards"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "double_signing_evidence_rewards",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "minted"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "double signing evidence rewards"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "endorsing_rewards",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "minted"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "endorsing rewards"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "baking_rewards",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "minted"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "baking rewards"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "baking_bonuses",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "minted"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "baking bonuses"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "subsidy",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "minted"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "subsidy"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "invoice",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "minted"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "invoice"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "storage_fees",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "burned"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "storage fees"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "punishments",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "burned"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "punishments"
                ]
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "lost_endorsing_rewards",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "burned"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "lost endorsing rewards"
                ]
              },
              "delegate": {
                "$ref": "#/components/schemas/pkh"
              },
              "participation": {
                "type": "boolean"
              },
              "revelation": {
                "type": "boolean"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "revelation",
              "participation",
              "delegate",
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "commitment",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "commitment"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "commitment"
                ]
              },
              "committer": {
                "type": "string"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "committer",
              "category",
              "kind",
              "change"
            ],
            "additionalProperties": false
          },
          {
            "title": "ignore",
            "type": "object",
            "properties": {
              "change": {
                "$ref": "#/components/schemas/zarith"
              },
              "kind": {
                "type": "string"
              },
              "origin": {
                "type": "string"
              },
              "delayed_operation_hash": {
                "$ref": "#/components/schemas/operation_hash"
              }
            },
            "required": [
              "kind",
              "change"
            ]
          }
        ]
      },
      "big_map_diff": {
        "title": "big_map_diff",
        "oneOf": [
          {
            "title": "update",
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "update"
                ]
              },
              "updates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/big_map_update"
                }
              }
            },
            "required": [
              "updates",
              "action"
            ],
            "additionalProperties": false
          },
          {
            "title": "remove",
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "remove"
                ]
              }
            },
            "required": [
              "action"
            ],
            "additionalProperties": false
          },
          {
            "title": "copy",
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "copy"
                ]
              },
              "source": {
                "type": "string"
              },
              "updates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/big_map_update"
                }
              }
            },
            "required": [
              "updates",
              "source",
              "action"
            ],
            "additionalProperties": false
          },
          {
            "title": "alloc",
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "alloc"
                ]
              },
              "updates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/big_map_update"
                }
              },
              "key_type": {
                "$ref": "#/components/schemas/micheline"
              },
              "value_type": {
                "$ref": "#/components/schemas/micheline"
              }
            },
            "required": [
              "value_type",
              "key_type",
              "updates",
              "action"
            ],
            "additionalProperties": false
          }
        ]
      },
      "big_map_update": {
        "title": "big_map_update",
        "type": "object",
        "properties": {
          "key_hash": {
            "$ref": "#/components/schemas/script_expr_hash"
          },
          "key": {
            "$ref": "#/components/schemas/micheline"
          },
          "value": {
            "$ref": "#/components/schemas/micheline"
          }
        },
        "required": [
          "key",
          "key_hash"
        ],
        "additionalProperties": false
      },
      "block_point": {
        "title": "block_point",
        "type": "object",
        "properties": {
          "block": {
            "type": "string"
          },
          "level": {
            "$ref": "#/components/schemas/uint"
          },
          "tsp": {
            "$ref": "#/components/schemas/tsp"
          }
        },
        "required": [
          "tsp",
          "level",
          "block"
        ],
        "additionalProperties": false
      },
      "blockchain_user": {
        "title": "blockchain_user",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "whitelisted": {
            "type": "boolean"
          },
          "update": {
            "$ref": "#/components/schemas/id"
          }
        },
        "required": [
          "update",
          "whitelisted",
          "address"
        ],
        "additionalProperties": false
      },
      "campaign_info": {
        "title": "campaign_info",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "start_date": {
            "$ref": "#/components/schemas/date"
          },
          "duration": {
            "$ref": "#/components/schemas/uint"
          },
          "batches": {
            "$ref": "#/components/schemas/uint"
          },
          "minimal_batches": {
            "$ref": "#/components/schemas/uint"
          },
          "obligation_span_years": {
            "$ref": "#/components/schemas/uint"
          },
          "signature": {
            "$ref": "#/components/schemas/signature_campaign"
          },
          "private": {
            "type": "boolean"
          }
        },
        "required": [
          "signature",
          "batches",
          "duration",
          "start_date",
          "name"
        ],
        "additionalProperties": false
      },
      "campaign_input": {
        "title": "campaign_input",
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/uint"
          },
          "info": {
            "$ref": "#/components/schemas/campaign_info"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "available",
              "canceled",
              "closed",
              "minted"
            ]
          }
        },
        "required": [
          "info",
          "project"
        ]
      },
      "campaign_stats": {
        "title": "campaign_stats",
        "type": "object",
        "properties": {
          "orders": {
            "$ref": "#/components/schemas/uint"
          },
          "buyers": {
            "$ref": "#/components/schemas/uint"
          },
          "pending": {
            "$ref": "#/components/schemas/uint"
          },
          "valid": {
            "$ref": "#/components/schemas/uint"
          },
          "executed": {
            "$ref": "#/components/schemas/uint"
          },
          "refunded": {
            "$ref": "#/components/schemas/uint"
          },
          "rejected": {
            "$ref": "#/components/schemas/uint"
          },
          "collected": {
            "$ref": "#/components/schemas/uint"
          },
          "amount_collected": {
            "type": "number"
          }
        },
        "required": [
          "amount_collected",
          "collected",
          "rejected",
          "refunded",
          "executed",
          "valid",
          "pending",
          "buyers",
          "orders"
        ],
        "additionalProperties": false
      },
      "campaign_with_project": {
        "title": "campaign_with_project",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "project": {
            "$ref": "#/components/schemas/project"
          },
          "info": {
            "$ref": "#/components/schemas/campaign_info"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "available",
              "canceled",
              "closed",
              "minted"
            ]
          },
          "available": {
            "$ref": "#/components/schemas/uint"
          },
          "frozen": {
            "$ref": "#/components/schemas/uint"
          },
          "refunded": {
            "$ref": "#/components/schemas/uint"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_campaign_or_wallet"
          },
          "campaign_stats": {
            "$ref": "#/components/schemas/campaign_stats"
          }
        },
        "required": [
          "payment",
          "refunded",
          "frozen",
          "available",
          "status",
          "info",
          "project"
        ],
        "additionalProperties": false
      },
      "campaign_with_project_id": {
        "title": "campaign_with_project_id",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "project": {
            "$ref": "#/components/schemas/id"
          },
          "info": {
            "$ref": "#/components/schemas/campaign_info"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "available",
              "canceled",
              "closed",
              "minted"
            ]
          },
          "available": {
            "$ref": "#/components/schemas/uint"
          },
          "frozen": {
            "$ref": "#/components/schemas/uint"
          },
          "refunded": {
            "$ref": "#/components/schemas/uint"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_campaign_or_wallet"
          },
          "campaign_stats": {
            "$ref": "#/components/schemas/campaign_stats"
          }
        },
        "required": [
          "payment",
          "refunded",
          "frozen",
          "available",
          "status",
          "info",
          "project"
        ],
        "additionalProperties": false
      },
      "campaigns_stats": {
        "title": "campaigns_stats",
        "type": "object",
        "properties": {
          "created": {
            "$ref": "#/components/schemas/uint"
          },
          "available": {
            "$ref": "#/components/schemas/uint"
          },
          "canceled": {
            "$ref": "#/components/schemas/uint"
          },
          "closed": {
            "$ref": "#/components/schemas/uint"
          },
          "minted": {
            "$ref": "#/components/schemas/uint"
          },
          "collected": {
            "type": "number"
          }
        },
        "required": [
          "collected",
          "minted",
          "closed",
          "canceled",
          "available",
          "created"
        ],
        "additionalProperties": false
      },
      "client_info": {
        "title": "client_info",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "logos": {
            "$ref": "#/components/schemas/logos"
          },
          "palette": {
            "$ref": "#/components/schemas/palette"
          },
          "font": {
            "type": "string"
          },
          "api_domain": {
            "$ref": "#/components/schemas/url"
          },
          "explorer": {
            "$ref": "#/components/schemas/url"
          },
          "retraction_delay": {
            "type": "integer",
            "minimum": -1073741824,
            "maximum": 1073741823
          }
        },
        "required": [
          "api_domain",
          "name"
        ],
        "additionalProperties": false
      },
      "config": {
        "title": "config",
        "type": "object",
        "properties": {
          "client": {
            "$ref": "#/components/schemas/client_info"
          },
          "keys": {
            "oneOf": [
              {
                "title": "aws",
                "type": "object",
                "properties": {
                  "aws": {
                    "type": "string"
                  }
                },
                "required": [
                  "aws"
                ],
                "additionalProperties": false
              },
              {
                "title": "db",
                "type": "object",
                "properties": {
                  "db": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "db"
                ],
                "additionalProperties": false
              }
            ]
          },
          "inject": {
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "eth",
                  "tz"
                ]
              },
              "node": {
                "type": "string"
              },
              "sleep": {
                "type": "number"
              }
            },
            "required": [
              "node",
              "kind"
            ],
            "additionalProperties": false
          },
          "contract": {
            "oneOf": [
              {
                "title": "tz",
                "type": "object",
                "properties": {
                  "tz": {
                    "type": "object",
                    "properties": {
                      "admin": {
                        "type": "string"
                      },
                      "owner": {
                        "type": "string"
                      },
                      "asset": {
                        "type": "string"
                      },
                      "whitelist": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "owner",
                      "admin"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "tz"
                ],
                "additionalProperties": false
              }
            ]
          },
          "notify": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "hook",
                  "type": "object",
                  "properties": {
                    "hook": {
                      "$ref": "#/components/schemas/url"
                    }
                  },
                  "required": [
                    "hook"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          },
          "auth": {
            "oneOf": [
              {
                "title": "dev",
                "type": "string",
                "enum": [
                  "dev"
                ]
              },
              {
                "title": "auth0",
                "type": "object",
                "properties": {
                  "auth0": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string"
                      },
                      "client_id_mgmt": {
                        "type": "string"
                      },
                      "domain": {
                        "type": "string"
                      },
                      "iss": {
                        "type": "string"
                      },
                      "n": {
                        "type": "string"
                      },
                      "e": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "iss",
                      "domain",
                      "client_id_mgmt",
                      "client_id",
                      "client"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "auth0"
                ],
                "additionalProperties": false
              },
              {
                "title": "supertokens",
                "type": "object",
                "properties": {
                  "supertokens": {
                    "type": "object",
                    "properties": {
                      "api": {
                        "$ref": "#/components/schemas/url"
                      },
                      "client": {
                        "type": "string"
                      },
                      "iss": {
                        "$ref": "#/components/schemas/url"
                      }
                    },
                    "required": [
                      "client",
                      "api"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "supertokens"
                ],
                "additionalProperties": false
              }
            ]
          },
          "payment": {
            "$ref": "#/components/schemas/payment_config"
          },
          "kyc": {
            "$ref": "#/components/schemas/kyc_config"
          },
          "signature": {
            "$ref": "#/components/schemas/signature_config"
          },
          "indexer": {
            "title": "tz",
            "type": "object",
            "properties": {
              "nodes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tz": {
                "type": "object",
                "properties": {
                  "ledger_ids": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata_ids": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "managed_expr": {
                    "type": "string"
                  },
                  "whitelist_ids": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "required": [
              "tz",
              "nodes"
            ],
            "additionalProperties": false
          },
          "store": {
            "oneOf": [
              {
                "title": "aws",
                "type": "object",
                "properties": {
                  "access": {
                    "$ref": "#/components/schemas/url"
                  },
                  "aws": {
                    "type": "string"
                  }
                },
                "required": [
                  "aws",
                  "access"
                ],
                "additionalProperties": false
              },
              {
                "title": "local",
                "type": "object",
                "properties": {
                  "access": {
                    "$ref": "#/components/schemas/url"
                  },
                  "local": {
                    "type": "string"
                  }
                },
                "required": [
                  "local",
                  "access"
                ],
                "additionalProperties": false
              }
            ]
          },
          "ipfs": {
            "type": "string"
          },
          "email": {
            "oneOf": [
              {
                "title": "sendgrid",
                "type": "object",
                "properties": {
                  "sendgrid": {
                    "type": "object",
                    "properties": {
                      "src": {
                        "type": "string"
                      },
                      "dst": {
                        "type": "string"
                      },
                      "subject_prefix": {
                        "type": "string"
                      },
                      "link_template": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dst",
                      "src"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "sendgrid"
                ],
                "additionalProperties": false
              },
              {
                "title": "dev",
                "type": "string",
                "enum": [
                  "dev"
                ]
              }
            ]
          },
          "notarize": {
            "oneOf": [
              {
                "title": "pandora",
                "type": "object",
                "properties": {
                  "pandora": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "string"
                      },
                      "api": {
                        "$ref": "#/components/schemas/url"
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "api"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "pandora"
                ],
                "additionalProperties": false
              },
              {
                "title": "dev",
                "type": "object",
                "properties": {
                  "dev": {
                    "type": "null"
                  }
                },
                "required": [
                  "dev"
                ],
                "additionalProperties": false
              }
            ]
          }
        },
        "required": [
          "client"
        ],
        "additionalProperties": false
      },
      "contract": {
        "title": "contract",
        "type": "string"
      },
      "country_iso": {
        "title": "mangopay_country_iso",
        "type": "string",
        "enum": [
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "currency_iso": {
        "title": "mangopay_currency_iso",
        "type": "string",
        "enum": [
          "EUR",
          "GBP",
          "PLN",
          "CHF",
          "NOK",
          "SEK",
          "DKK",
          "USD",
          "CAD",
          "AUD",
          "JPY",
          "HKD",
          "AED",
          "ZAR",
          "CZK"
        ]
      },
      "date": {
        "type": "string"
      },
      "dump": {
        "title": "dump",
        "type": "object",
        "properties": {
          "sp": {
            "$ref": "#/components/schemas/tsp"
          },
          "okens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/token"
            }
          }
        },
        "required": [
          "okens",
          "sp"
        ],
        "additionalProperties": false
      },
      "entrypoint": {
        "title": "entrypoint",
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "default",
              "root",
              "do",
              "set",
              "remove"
            ]
          },
          {
            "type": "string"
          }
        ]
      },
      "evm_type": {
        "oneOf": [
          {
            "title": "fixed_type",
            "oneOf": [
              {
                "title": "int",
                "type": "object",
                "properties": {
                  "int": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                },
                "required": [
                  "int"
                ],
                "additionalProperties": false
              },
              {
                "title": "uint",
                "type": "object",
                "properties": {
                  "uint": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                },
                "required": [
                  "uint"
                ],
                "additionalProperties": false
              },
              {
                "title": "bool",
                "type": "string",
                "enum": [
                  "bool"
                ]
              },
              {
                "title": "address",
                "type": "string",
                "enum": [
                  "address"
                ]
              },
              {
                "title": "fixed",
                "type": "object",
                "properties": {
                  "fixed": {
                    "type": "array",
                    "items": [
                      {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      }
                    ]
                  }
                },
                "required": [
                  "fixed"
                ],
                "additionalProperties": false
              },
              {
                "title": "ufixed",
                "type": "object",
                "properties": {
                  "ufixed": {
                    "type": "array",
                    "items": [
                      {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      }
                    ]
                  }
                },
                "required": [
                  "ufixed"
                ],
                "additionalProperties": false
              },
              {
                "title": "fbytes",
                "type": "object",
                "properties": {
                  "bytes": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                },
                "required": [
                  "bytes"
                ],
                "additionalProperties": false
              }
            ]
          },
          {
            "title": "bytes",
            "type": "string",
            "enum": [
              "bytes"
            ]
          },
          {
            "title": "string",
            "type": "string",
            "enum": [
              "string"
            ]
          },
          {
            "title": "array",
            "type": "object",
            "properties": {
              "array": {
                "$ref": "#/components/schemas/evm_type"
              }
            },
            "required": [
              "array"
            ],
            "additionalProperties": false
          },
          {
            "title": "farray",
            "type": "object",
            "properties": {
              "array": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/components/schemas/evm_type"
                  },
                  {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                ]
              }
            },
            "required": [
              "array"
            ],
            "additionalProperties": false
          },
          {
            "title": "tuple",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/evm_type"
            }
          }
        ]
      },
      "evm_value": {
        "oneOf": [
          {
            "title": "int",
            "type": "object",
            "properties": {
              "int": {
                "type": "string"
              }
            },
            "required": [
              "int"
            ],
            "additionalProperties": false
          },
          {
            "title": "bool",
            "type": "boolean"
          },
          {
            "title": "address",
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false
          },
          {
            "title": "bytes",
            "type": "object",
            "properties": {
              "bytes": {
                "type": "string"
              }
            },
            "required": [
              "bytes"
            ],
            "additionalProperties": false
          },
          {
            "title": "string",
            "type": "object",
            "properties": {
              "string": {
                "type": "string"
              }
            },
            "required": [
              "string"
            ],
            "additionalProperties": false
          },
          {
            "title": "array",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/evm_value"
            }
          }
        ]
      },
      "grouping_stats": {
        "title": "grouping_stats",
        "type": "object",
        "properties": {
          "quantity": {
            "$ref": "#/components/schemas/uint"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "amount",
          "quantity"
        ],
        "additionalProperties": false
      },
      "hex": {
        "title": "hex",
        "type": "string"
      },
      "id": {
        "type": "integer",
        "minimum": 0,
        "maximum": 9007199254740992,
        "readOnly": true
      },
      "inject_input": {
        "oneOf": [
          {
            "title": "tz",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "title": "reveal",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "reveal"
                      ]
                    },
                    "public_key": {
                      "$ref": "#/components/schemas/pk"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "public_key",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "transaction",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "transaction"
                      ]
                    },
                    "amount": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "destination": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "entrypoint": {
                          "$ref": "#/components/schemas/entrypoint"
                        },
                        "value": {
                          "$ref": "#/components/schemas/script_expr"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "additionalProperties": false
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "destination",
                    "amount",
                    "kind",
                    "source"
                  ]
                },
                {
                  "title": "origination",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "origination"
                      ]
                    },
                    "balance": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "script": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "$ref": "#/components/schemas/script_expr"
                        },
                        "storage": {
                          "$ref": "#/components/schemas/script_expr"
                        }
                      },
                      "required": [
                        "storage",
                        "code"
                      ]
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "script",
                    "balance",
                    "kind",
                    "source"
                  ]
                },
                {
                  "title": "delegation",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "delegation"
                      ]
                    },
                    "delegate": {
                      "$ref": "#/components/schemas/pkh"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "event",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "event"
                      ]
                    },
                    "type": {
                      "$ref": "#/components/schemas/micheline"
                    },
                    "payload": {
                      "$ref": "#/components/schemas/micheline"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "type",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "constant",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "register_global_constant"
                      ]
                    },
                    "value": {
                      "$ref": "#/components/schemas/script_expr"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "value",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "deposits_limit",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "set_deposits_limit"
                      ]
                    },
                    "limit": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "increase_paid_storage",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "increase_paid_storage"
                      ]
                    },
                    "amount": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "destination": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "destination",
                    "amount",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "update_consensus_key",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "update_consensus_key"
                      ]
                    },
                    "pk": {
                      "$ref": "#/components/schemas/pk"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "pk",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "transfer_ticket",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "transfer_ticket"
                      ]
                    },
                    "contents": {
                      "$ref": "#/components/schemas/script_expr"
                    },
                    "type": {
                      "$ref": "#/components/schemas/script_expr"
                    },
                    "ticketer": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "amount": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "destination": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "entrypoint": {
                      "$ref": "#/components/schemas/entrypoint"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "entrypoint",
                    "destination",
                    "amount",
                    "ticketer",
                    "type",
                    "contents",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "dal_publish",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "dal_publish_commitment"
                      ]
                    },
                    "slot_header": {
                      "type": "object",
                      "properties": {
                        "slot_index": {
                          "type": "integer",
                          "minimum": -1073741824,
                          "maximum": 1073741823
                        },
                        "commitment": {
                          "type": "string"
                        },
                        "commitment_proof": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "commitment_proof",
                        "commitment",
                        "slot_index"
                      ],
                      "additionalProperties": false
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "slot_header",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_originate",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_originate"
                      ]
                    },
                    "pvm_kind": {
                      "type": "string"
                    },
                    "kernel": {
                      "$ref": "#/components/schemas/hex"
                    },
                    "parameters_ty": {
                      "$ref": "#/components/schemas/script_expr"
                    },
                    "whitelist": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/pkh"
                      }
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "parameters_ty",
                    "kernel",
                    "pvm_kind",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_add_messages",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_add_messages"
                      ]
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "message",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_cement",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_cement"
                      ]
                    },
                    "rollup": {
                      "$ref": "#/components/schemas/sc_rollup_hash"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "rollup",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_publish",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_publish"
                      ]
                    },
                    "rollup": {
                      "$ref": "#/components/schemas/sc_rollup_hash"
                    },
                    "commitment": {
                      "type": "object",
                      "properties": {
                        "compressed_state": {
                          "$ref": "#/components/schemas/sc_state_hash"
                        },
                        "inbox_level": {
                          "$ref": "#/components/schemas/uint32"
                        },
                        "predecessor": {
                          "$ref": "#/components/schemas/sc_commitment_hash"
                        },
                        "number_of_ticks": {
                          "$ref": "#/components/schemas/uint64"
                        }
                      },
                      "required": [
                        "number_of_ticks",
                        "predecessor",
                        "inbox_level",
                        "compressed_state"
                      ],
                      "additionalProperties": false
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "commitment",
                    "rollup",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_refute",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_refute"
                      ]
                    },
                    "rollup": {
                      "$ref": "#/components/schemas/sc_rollup_hash"
                    },
                    "opponent": {
                      "$ref": "#/components/schemas/pkh"
                    },
                    "refutation": {},
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "refutation",
                    "opponent",
                    "rollup",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_timeout",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_timeout"
                      ]
                    },
                    "rollup": {
                      "$ref": "#/components/schemas/sc_rollup_hash"
                    },
                    "stakers": {
                      "type": "object",
                      "properties": {
                        "alice": {
                          "$ref": "#/components/schemas/pkh"
                        },
                        "bob": {
                          "$ref": "#/components/schemas/pkh"
                        }
                      },
                      "required": [
                        "bob",
                        "alice"
                      ],
                      "additionalProperties": false
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "stakers",
                    "rollup",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_execute",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_execute_outbox_message"
                      ]
                    },
                    "rollup": {
                      "$ref": "#/components/schemas/sc_rollup_hash"
                    },
                    "cemented_commitment": {
                      "type": "object",
                      "properties": {
                        "compressed_state": {
                          "$ref": "#/components/schemas/sc_state_hash"
                        },
                        "inbox_level": {
                          "$ref": "#/components/schemas/uint32"
                        },
                        "predecessor": {
                          "$ref": "#/components/schemas/sc_commitment_hash"
                        },
                        "number_of_ticks": {
                          "$ref": "#/components/schemas/uint64"
                        }
                      },
                      "required": [
                        "number_of_ticks",
                        "predecessor",
                        "inbox_level",
                        "compressed_state"
                      ],
                      "additionalProperties": false
                    },
                    "output_proof": {
                      "type": "string"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "output_proof",
                    "cemented_commitment",
                    "rollup",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "sr_recover",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "smart_rollup_recover_bond"
                      ]
                    },
                    "rollup": {
                      "$ref": "#/components/schemas/sc_rollup_hash"
                    },
                    "staker": {
                      "$ref": "#/components/schemas/pkh"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "staker",
                    "rollup",
                    "kind",
                    "source"
                  ],
                  "additionalProperties": false
                },
                {
                  "title": "unknown",
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/components/schemas/contract"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "fee": {
                      "$ref": "#/components/schemas/uint64"
                    },
                    "counter": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "gas_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "storage_limit": {
                      "$ref": "#/components/schemas/zarith"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/manager_metadata"
                    }
                  },
                  "required": [
                    "storage_limit",
                    "gas_limit",
                    "counter",
                    "fee",
                    "kind",
                    "source"
                  ]
                }
              ]
            }
          },
          {
            "title": "eth",
            "type": "object",
            "properties": {
              "maxPriorityFeePerGas": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "minimum": -9007199254740992,
                    "maximum": 9007199254740992
                  }
                ]
              },
              "maxFeePerGas": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "minimum": -9007199254740992,
                    "maximum": 9007199254740992
                  }
                ]
              },
              "value": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "minimum": -9007199254740992,
                    "maximum": 9007199254740992
                  }
                ]
              },
              "data": {
                "oneOf": [
                  {
                    "title": "B",
                    "type": "string"
                  },
                  {
                    "title": "O",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "types": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/evm_type"
                        }
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/evm_value"
                        }
                      }
                    },
                    "required": [
                      "values",
                      "types",
                      "name"
                    ],
                    "additionalProperties": false
                  }
                ]
              },
              "chain_id": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "minimum": -9007199254740992,
                    "maximum": 9007199254740992
                  }
                ]
              },
              "nonce": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "minimum": -9007199254740992,
                    "maximum": 9007199254740992
                  }
                ]
              },
              "gas_limit": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "minimum": -9007199254740992,
                    "maximum": 9007199254740992
                  }
                ]
              },
              "accessList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "storageKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "storageKeys",
                    "address"
                  ],
                  "additionalProperties": false
                }
              },
              "signature": {
                "type": "object",
                "properties": {
                  "v": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer",
                        "minimum": -9007199254740992,
                        "maximum": 9007199254740992
                      }
                    ]
                  },
                  "r": {
                    "type": "string"
                  },
                  "s": {
                    "type": "string"
                  }
                },
                "required": [
                  "s",
                  "r",
                  "v"
                ],
                "additionalProperties": false
              },
              "to": {
                "type": "string"
              },
              "max_fee_per_blob_gas": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer",
                    "minimum": -9007199254740992,
                    "maximum": 9007199254740992
                  }
                ]
              },
              "blob_versioned_hashes": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer",
                      "minimum": -9007199254740992,
                      "maximum": 9007199254740992
                    }
                  ]
                }
              },
              "blobs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "internal_manager_operation": {
        "title": "internal_manager_operation",
        "oneOf": [
          {
            "title": "reveal",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "reveal"
                ]
              },
              "public_key": {
                "$ref": "#/components/schemas/pk"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "public_key",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "transaction",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "transaction"
                ]
              },
              "amount": {
                "$ref": "#/components/schemas/uint64"
              },
              "destination": {
                "$ref": "#/components/schemas/contract"
              },
              "parameters": {
                "type": "object",
                "properties": {
                  "entrypoint": {
                    "$ref": "#/components/schemas/entrypoint"
                  },
                  "value": {
                    "$ref": "#/components/schemas/micheline"
                  }
                },
                "required": [
                  "value"
                ],
                "additionalProperties": false
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "destination",
              "amount",
              "kind",
              "source"
            ]
          },
          {
            "title": "origination",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "origination"
                ]
              },
              "balance": {
                "$ref": "#/components/schemas/uint64"
              },
              "script": {
                "type": "object",
                "properties": {
                  "code": {
                    "$ref": "#/components/schemas/micheline"
                  },
                  "storage": {
                    "$ref": "#/components/schemas/micheline"
                  }
                },
                "required": [
                  "storage",
                  "code"
                ]
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "script",
              "balance",
              "kind",
              "source"
            ]
          },
          {
            "title": "delegation",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "delegation"
                ]
              },
              "delegate": {
                "$ref": "#/components/schemas/pkh"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "event",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "event"
                ]
              },
              "type": {
                "$ref": "#/components/schemas/micheline"
              },
              "payload": {
                "$ref": "#/components/schemas/micheline"
              },
              "tag": {
                "type": "string"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "type",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "constant",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "register_global_constant"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/micheline"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "value",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "deposits_limit",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "set_deposits_limit"
                ]
              },
              "limit": {
                "$ref": "#/components/schemas/uint64"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "increase_paid_storage",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "increase_paid_storage"
                ]
              },
              "amount": {
                "$ref": "#/components/schemas/zarith"
              },
              "destination": {
                "$ref": "#/components/schemas/contract"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "destination",
              "amount",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "update_consensus_key",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "update_consensus_key"
                ]
              },
              "pk": {
                "$ref": "#/components/schemas/pk"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "pk",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "transfer_ticket",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "transfer_ticket"
                ]
              },
              "contents": {
                "$ref": "#/components/schemas/script_expr"
              },
              "type": {
                "$ref": "#/components/schemas/script_expr"
              },
              "ticketer": {
                "$ref": "#/components/schemas/contract"
              },
              "amount": {
                "$ref": "#/components/schemas/uint64"
              },
              "destination": {
                "$ref": "#/components/schemas/contract"
              },
              "entrypoint": {
                "$ref": "#/components/schemas/entrypoint"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "entrypoint",
              "destination",
              "amount",
              "ticketer",
              "type",
              "contents",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "dal_publish",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "dal_publish_commitment"
                ]
              },
              "slot_header": {
                "type": "object",
                "properties": {
                  "slot_index": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "commitment": {
                    "type": "string"
                  },
                  "commitment_proof": {
                    "type": "string"
                  }
                },
                "required": [
                  "commitment_proof",
                  "commitment",
                  "slot_index"
                ],
                "additionalProperties": false
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "slot_header",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_originate",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_originate"
                ]
              },
              "pvm_kind": {
                "type": "string"
              },
              "kernel": {
                "$ref": "#/components/schemas/hex"
              },
              "parameters_ty": {
                "$ref": "#/components/schemas/script_expr"
              },
              "whitelist": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/pkh"
                }
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "parameters_ty",
              "kernel",
              "pvm_kind",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_add_messages",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_add_messages"
                ]
              },
              "message": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "message",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_cement",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_cement"
                ]
              },
              "rollup": {
                "$ref": "#/components/schemas/sc_rollup_hash"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "rollup",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_publish",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_publish"
                ]
              },
              "rollup": {
                "$ref": "#/components/schemas/sc_rollup_hash"
              },
              "commitment": {
                "type": "object",
                "properties": {
                  "compressed_state": {
                    "$ref": "#/components/schemas/sc_state_hash"
                  },
                  "inbox_level": {
                    "$ref": "#/components/schemas/uint32"
                  },
                  "predecessor": {
                    "$ref": "#/components/schemas/sc_commitment_hash"
                  },
                  "number_of_ticks": {
                    "$ref": "#/components/schemas/uint64"
                  }
                },
                "required": [
                  "number_of_ticks",
                  "predecessor",
                  "inbox_level",
                  "compressed_state"
                ],
                "additionalProperties": false
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "commitment",
              "rollup",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_refute",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_refute"
                ]
              },
              "rollup": {
                "$ref": "#/components/schemas/sc_rollup_hash"
              },
              "opponent": {
                "$ref": "#/components/schemas/pkh"
              },
              "refutation": {},
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "refutation",
              "opponent",
              "rollup",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_timeout",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_timeout"
                ]
              },
              "rollup": {
                "$ref": "#/components/schemas/sc_rollup_hash"
              },
              "stakers": {
                "type": "object",
                "properties": {
                  "alice": {
                    "$ref": "#/components/schemas/pkh"
                  },
                  "bob": {
                    "$ref": "#/components/schemas/pkh"
                  }
                },
                "required": [
                  "bob",
                  "alice"
                ],
                "additionalProperties": false
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "stakers",
              "rollup",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_execute",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_execute_outbox_message"
                ]
              },
              "rollup": {
                "$ref": "#/components/schemas/sc_rollup_hash"
              },
              "cemented_commitment": {
                "type": "object",
                "properties": {
                  "compressed_state": {
                    "$ref": "#/components/schemas/sc_state_hash"
                  },
                  "inbox_level": {
                    "$ref": "#/components/schemas/uint32"
                  },
                  "predecessor": {
                    "$ref": "#/components/schemas/sc_commitment_hash"
                  },
                  "number_of_ticks": {
                    "$ref": "#/components/schemas/uint64"
                  }
                },
                "required": [
                  "number_of_ticks",
                  "predecessor",
                  "inbox_level",
                  "compressed_state"
                ],
                "additionalProperties": false
              },
              "output_proof": {
                "type": "string"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "output_proof",
              "cemented_commitment",
              "rollup",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "sr_recover",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "smart_rollup_recover_bond"
                ]
              },
              "rollup": {
                "$ref": "#/components/schemas/sc_rollup_hash"
              },
              "staker": {
                "$ref": "#/components/schemas/pkh"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "staker",
              "rollup",
              "kind",
              "source"
            ],
            "additionalProperties": false
          },
          {
            "title": "unknown",
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/components/schemas/contract"
              },
              "kind": {
                "type": "string"
              },
              "nonce": {
                "$ref": "#/components/schemas/uint32"
              },
              "result": {
                "$ref": "#/components/schemas/op_metadata"
              }
            },
            "required": [
              "result",
              "nonce",
              "kind",
              "source"
            ]
          }
        ]
      },
      "kyc": {
        "oneOf": [
          {
            "title": "dataleon",
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "dataleon": {
                    "type": "string"
                  }
                },
                "required": [
                  "dataleon"
                ],
                "additionalProperties": false
              },
              "status": {
                "oneOf": [
                  {
                    "title": "kyc_status_aux",
                    "$ref": "#/components/schemas/kyc_status_aux"
                  },
                  {
                    "title": "pending",
                    "type": "object",
                    "properties": {
                      "pending": {
                        "$ref": "#/components/schemas/url"
                      }
                    },
                    "required": [
                      "pending"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "status",
              "id"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "dev": {
                    "type": "string"
                  }
                },
                "required": [
                  "dev"
                ],
                "additionalProperties": false
              },
              "status": {
                "oneOf": [
                  {
                    "title": "kyc_status_aux",
                    "$ref": "#/components/schemas/kyc_status_aux"
                  },
                  {
                    "title": "pending",
                    "type": "object",
                    "properties": {
                      "pending": {
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "pending"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "status",
              "id"
            ],
            "additionalProperties": false
          }
        ]
      },
      "kyc_config": {
        "type": "object",
        "properties": {
          "dataleon": {
            "type": "object",
            "properties": {
              "workspace_kyc": {
                "type": "string"
              },
              "workspace_kyb": {
                "type": "string"
              },
              "callback": {
                "type": "string"
              }
            },
            "required": [
              "callback",
              "workspace_kyb",
              "workspace_kyc"
            ],
            "additionalProperties": false
          },
          "dev": {
            "type": "null"
          }
        },
        "additionalProperties": false
      },
      "kyc_hook": {
        "oneOf": [
          {
            "title": "dataleon",
            "oneOf": [
              {
                "title": "response",
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "task_id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  },
                  "entities": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string"
                        },
                        "document_id": {},
                        "document_name": {},
                        "document_number": {
                          "type": "integer",
                          "minimum": -1073741824,
                          "maximum": 1073741823
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "page": {
                          "type": "integer",
                          "minimum": -1073741824,
                          "maximum": 1073741823
                        },
                        "step": {
                          "type": "string"
                        },
                        "bounding_box": {},
                        "color": {
                          "type": "string"
                        },
                        "confidence": {
                          "type": "number"
                        },
                        "text": {
                          "type": "string"
                        },
                        "value": {}
                      },
                      "required": [
                        "bounding_box",
                        "name"
                      ]
                    }
                  },
                  "validations": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "title": "default",
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string"
                            },
                            "document_id": {},
                            "document_name": {},
                            "document_number": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "page": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "step": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "nodes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "type": "string"
                            },
                            "type_validation": {
                              "type": "string"
                            },
                            "validate": {
                              "type": "boolean"
                            },
                            "weight": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            }
                          },
                          "required": [
                            "validate",
                            "name"
                          ]
                        },
                        {
                          "title": "AML",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "caption": {
                              "type": "string"
                            },
                            "status": {},
                            "type_": {
                              "type": "string"
                            },
                            "source": {
                              "type": "string"
                            },
                            "schema": {
                              "type": "string"
                            },
                            "score": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "status",
                            "name"
                          ]
                        }
                      ]
                    }
                  },
                  "class": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string"
                        },
                        "document_id": {},
                        "document_name": {},
                        "document_number": {
                          "type": "integer",
                          "minimum": -1073741824,
                          "maximum": 1073741823
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "page": {
                          "type": "integer",
                          "minimum": -1073741824,
                          "maximum": 1073741823
                        },
                        "step": {
                          "type": "string"
                        },
                        "confidence": {
                          "type": "number"
                        },
                        "color": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "confidence",
                        "name"
                      ]
                    }
                  },
                  "alerts": {
                    "type": "array",
                    "items": {}
                  },
                  "form": {
                    "type": "object",
                    "properties": {
                      "document_type": {
                        "type": "string"
                      },
                      "document_country": {
                        "type": "string"
                      }
                    }
                  },
                  "documents": {}
                },
                "required": [
                  "metadata"
                ]
              },
              {
                "title": "task",
                "type": "object",
                "properties": {
                  "task_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "response": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "task_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      },
                      "entities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string"
                            },
                            "document_id": {},
                            "document_name": {},
                            "document_number": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "page": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "step": {
                              "type": "string"
                            },
                            "bounding_box": {},
                            "color": {
                              "type": "string"
                            },
                            "confidence": {
                              "type": "number"
                            },
                            "text": {
                              "type": "string"
                            },
                            "value": {}
                          },
                          "required": [
                            "bounding_box",
                            "name"
                          ]
                        }
                      },
                      "validations": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "title": "default",
                              "type": "object",
                              "properties": {
                                "action": {
                                  "type": "string"
                                },
                                "document_id": {},
                                "document_name": {},
                                "document_number": {
                                  "type": "integer",
                                  "minimum": -1073741824,
                                  "maximum": 1073741823
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "page": {
                                  "type": "integer",
                                  "minimum": -1073741824,
                                  "maximum": 1073741823
                                },
                                "step": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string"
                                },
                                "nodes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "type": {
                                  "type": "string"
                                },
                                "type_validation": {
                                  "type": "string"
                                },
                                "validate": {
                                  "type": "boolean"
                                },
                                "weight": {
                                  "type": "integer",
                                  "minimum": -1073741824,
                                  "maximum": 1073741823
                                }
                              },
                              "required": [
                                "validate",
                                "name"
                              ]
                            },
                            {
                              "title": "AML",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "caption": {
                                  "type": "string"
                                },
                                "status": {},
                                "type_": {
                                  "type": "string"
                                },
                                "source": {
                                  "type": "string"
                                },
                                "schema": {
                                  "type": "string"
                                },
                                "score": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "status",
                                "name"
                              ]
                            }
                          ]
                        }
                      },
                      "class": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string"
                            },
                            "document_id": {},
                            "document_name": {},
                            "document_number": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "page": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "step": {
                              "type": "string"
                            },
                            "confidence": {
                              "type": "number"
                            },
                            "color": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "confidence",
                            "name"
                          ]
                        }
                      },
                      "alerts": {
                        "type": "array",
                        "items": {}
                      },
                      "form": {
                        "type": "object",
                        "properties": {
                          "document_type": {
                            "type": "string"
                          },
                          "document_country": {
                            "type": "string"
                          }
                        }
                      },
                      "documents": {}
                    },
                    "required": [
                      "metadata"
                    ]
                  }
                },
                "required": [
                  "status",
                  "task_id"
                ]
              }
            ]
          },
          {
            "title": "dev",
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "kyc_kind": {
        "type": "string",
        "enum": [
          "dataleon",
          "dev"
        ]
      },
      "kyc_status_aux": {
        "title": "kyc_status_aux",
        "type": "string",
        "enum": [
          "canceled",
          "succeeded",
          "failed",
          "unknown"
        ]
      },
      "logos": {
        "title": "logos",
        "type": "object",
        "properties": {
          "vector": {
            "$ref": "#/components/schemas/url"
          },
          "png": {
            "$ref": "#/components/schemas/url"
          },
          "icons": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/url"
            }
          }
        },
        "required": [
          "icons",
          "png",
          "vector"
        ],
        "additionalProperties": false
      },
      "manager_metadata": {
        "title": "manager_metadata",
        "type": "object",
        "properties": {
          "balance_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/balance_update"
            }
          },
          "operation_result": {
            "$ref": "#/components/schemas/op_metadata"
          },
          "internal_operation_results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/internal_manager_operation"
            }
          }
        },
        "required": [
          "operation_result"
        ],
        "additionalProperties": false
      },
      "micheline": {
        "oneOf": [
          {
            "title": "int",
            "type": "object",
            "properties": {
              "int": {
                "$ref": "#/components/schemas/zarith"
              }
            },
            "required": [
              "int"
            ],
            "additionalProperties": false
          },
          {
            "title": "string",
            "type": "object",
            "properties": {
              "string": {
                "type": "string"
              }
            },
            "required": [
              "string"
            ],
            "additionalProperties": false
          },
          {
            "title": "bytes",
            "type": "object",
            "properties": {
              "bytes": {
                "$ref": "#/components/schemas/hex"
              }
            },
            "required": [
              "bytes"
            ],
            "additionalProperties": false
          },
          {
            "title": "prim",
            "type": "object",
            "properties": {
              "prim": {
                "oneOf": [
                  {
                    "title": "primitive",
                    "$ref": "#/components/schemas/primitive"
                  },
                  {
                    "title": "macro",
                    "type": "string"
                  }
                ]
              },
              "args": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/micheline"
                }
              },
              "annots": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "prim"
            ],
            "additionalProperties": false
          },
          {
            "title": "seq",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/micheline"
            }
          }
        ]
      },
      "mint_status": {
        "title": "mint_status",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "deploying",
              "whitelisting",
              "minting",
              "minted"
            ]
          },
          "processing": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "tsp": {
                  "$ref": "#/components/schemas/tsp"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "info": {
                      "$ref": "#/components/schemas/user_info"
                    },
                    "creation": {
                      "$ref": "#/components/schemas/tsp"
                    },
                    "auth": {
                      "$ref": "#/components/schemas/user_auth_email"
                    },
                    "payment": {
                      "$ref": "#/components/schemas/payment_user"
                    },
                    "kyc": {
                      "$ref": "#/components/schemas/kyc"
                    },
                    "blockchain": {
                      "$ref": "#/components/schemas/blockchain_user"
                    },
                    "status": {
                      "$ref": "#/components/schemas/user_status"
                    },
                    "stats": {
                      "$ref": "#/components/schemas/user_stats"
                    },
                    "pending_orders": {
                      "type": "boolean"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "kyc",
                    "payment",
                    "auth",
                    "creation",
                    "info"
                  ],
                  "additionalProperties": false
                },
                "campaign": {
                  "$ref": "#/components/schemas/id"
                },
                "quantity": {
                  "$ref": "#/components/schemas/uint"
                },
                "signature": {
                  "$ref": "#/components/schemas/signature_order"
                },
                "payment": {
                  "$ref": "#/components/schemas/payment_order"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "valid",
                    "executed",
                    "refunded",
                    "rejected"
                  ]
                }
              },
              "required": [
                "status",
                "payment",
                "signature",
                "quantity",
                "campaign",
                "user",
                "tsp",
                "id"
              ],
              "additionalProperties": false
            }
          },
          "processed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "tsp": {
                  "$ref": "#/components/schemas/tsp"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "info": {
                      "$ref": "#/components/schemas/user_info"
                    },
                    "creation": {
                      "$ref": "#/components/schemas/tsp"
                    },
                    "auth": {
                      "$ref": "#/components/schemas/user_auth_email"
                    },
                    "payment": {
                      "$ref": "#/components/schemas/payment_user"
                    },
                    "kyc": {
                      "$ref": "#/components/schemas/kyc"
                    },
                    "blockchain": {
                      "$ref": "#/components/schemas/blockchain_user"
                    },
                    "status": {
                      "$ref": "#/components/schemas/user_status"
                    },
                    "stats": {
                      "$ref": "#/components/schemas/user_stats"
                    },
                    "pending_orders": {
                      "type": "boolean"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "kyc",
                    "payment",
                    "auth",
                    "creation",
                    "info"
                  ],
                  "additionalProperties": false
                },
                "campaign": {
                  "$ref": "#/components/schemas/id"
                },
                "quantity": {
                  "$ref": "#/components/schemas/uint"
                },
                "signature": {
                  "$ref": "#/components/schemas/signature_order"
                },
                "payment": {
                  "$ref": "#/components/schemas/payment_order"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "valid",
                    "executed",
                    "refunded",
                    "rejected"
                  ]
                }
              },
              "required": [
                "status",
                "payment",
                "signature",
                "quantity",
                "campaign",
                "user",
                "tsp",
                "id"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "processed",
          "processing",
          "status"
        ],
        "additionalProperties": false
      },
      "op_metadata": {
        "title": "operation_metadata",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/op_status"
          },
          "consumed_milligas": {
            "$ref": "#/components/schemas/zarith"
          },
          "balance_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/balance_update"
            }
          },
          "allocated_destination_contract": {
            "type": "boolean"
          },
          "originated_contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contract"
            }
          },
          "storage_size": {
            "$ref": "#/components/schemas/zarith"
          },
          "storage": {
            "$ref": "#/components/schemas/micheline"
          },
          "paid_storage_size_diff": {
            "$ref": "#/components/schemas/zarith"
          },
          "lazy_storage_diff": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/storage_diff_item"
            }
          },
          "errors": {
            "type": "array",
            "items": {}
          },
          "originated_rollup": {
            "$ref": "#/components/schemas/tx_rollup_hash"
          },
          "global_address": {
            "$ref": "#/components/schemas/script_expr_hash"
          }
        },
        "required": [
          "status"
        ]
      },
      "op_status": {
        "title": "operation_status",
        "type": "string",
        "enum": [
          "applied",
          "failed",
          "skipped",
          "backtracked"
        ]
      },
      "operation_hash": {
        "title": "operation_hash",
        "type": "string"
      },
      "operation_kind": {
        "title": "operation_kind",
        "oneOf": [
          {
            "title": "transaction",
            "type": "object",
            "properties": {
              "transaction": {
                "type": "string"
              }
            },
            "required": [
              "transaction"
            ],
            "additionalProperties": false
          },
          {
            "title": "origination",
            "type": "object",
            "properties": {
              "origination": {
                "type": "string"
              }
            },
            "required": [
              "origination"
            ],
            "additionalProperties": false
          }
        ]
      },
      "operation_status": {
        "title": "operation_status",
        "oneOf": [
          {
            "title": "injected",
            "type": "object",
            "properties": {
              "injected": {
                "$ref": "#/components/schemas/tsp"
              }
            },
            "required": [
              "injected"
            ],
            "additionalProperties": false
          },
          {
            "title": "registered",
            "type": "object",
            "properties": {
              "registered": {
                "$ref": "#/components/schemas/block_point"
              }
            },
            "required": [
              "registered"
            ],
            "additionalProperties": false
          },
          {
            "title": "included",
            "type": "object",
            "properties": {
              "included": {
                "$ref": "#/components/schemas/block_point"
              }
            },
            "required": [
              "included"
            ],
            "additionalProperties": false
          },
          {
            "title": "confirmed",
            "type": "object",
            "properties": {
              "confirmed": {
                "$ref": "#/components/schemas/block_point"
              }
            },
            "required": [
              "confirmed"
            ],
            "additionalProperties": false
          }
        ]
      },
      "order_documents": {
        "title": "order_documents",
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "order": {
            "$ref": "#/components/schemas/order_with_user_id"
          }
        },
        "required": [
          "order",
          "documents"
        ],
        "additionalProperties": false
      },
      "order_with_ids": {
        "title": "order_with_ids",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "tsp": {
            "$ref": "#/components/schemas/tsp"
          },
          "user": {
            "$ref": "#/components/schemas/id"
          },
          "campaign": {
            "$ref": "#/components/schemas/id"
          },
          "quantity": {
            "$ref": "#/components/schemas/uint"
          },
          "signature": {
            "$ref": "#/components/schemas/signature_order"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_order"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "valid",
              "executed",
              "refunded",
              "rejected"
            ]
          }
        },
        "required": [
          "status",
          "payment",
          "signature",
          "quantity",
          "campaign",
          "user",
          "tsp",
          "id"
        ],
        "additionalProperties": false
      },
      "order_with_user": {
        "title": "order_with_user",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "tsp": {
            "$ref": "#/components/schemas/tsp"
          },
          "user": {
            "$ref": "#/components/schemas/user_with_id",
            "nullable": true
          },
          "campaign": {
            "$ref": "#/components/schemas/id"
          },
          "quantity": {
            "$ref": "#/components/schemas/uint"
          },
          "signature": {
            "$ref": "#/components/schemas/signature_order"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_order"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "valid",
              "executed",
              "refunded",
              "rejected"
            ]
          }
        },
        "required": [
          "status",
          "payment",
          "signature",
          "quantity",
          "campaign",
          "user",
          "tsp",
          "id"
        ],
        "additionalProperties": false
      },
      "order_with_user_email": {
        "title": "order_with_user_email",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "tsp": {
            "$ref": "#/components/schemas/tsp"
          },
          "user": {
            "$ref": "#/components/schemas/user_auth_email",
            "nullable": true
          },
          "campaign": {
            "$ref": "#/components/schemas/campaign_with_project"
          },
          "quantity": {
            "$ref": "#/components/schemas/uint"
          },
          "signature": {
            "$ref": "#/components/schemas/signature_order"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_order"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "valid",
              "executed",
              "refunded",
              "rejected"
            ]
          }
        },
        "required": [
          "status",
          "payment",
          "signature",
          "quantity",
          "campaign",
          "user",
          "tsp",
          "id"
        ],
        "additionalProperties": false
      },
      "order_with_user_id": {
        "title": "order_with_user_id",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "tsp": {
            "$ref": "#/components/schemas/tsp"
          },
          "user": {
            "$ref": "#/components/schemas/id"
          },
          "campaign": {
            "$ref": "#/components/schemas/campaign_with_project"
          },
          "quantity": {
            "$ref": "#/components/schemas/uint"
          },
          "signature": {
            "$ref": "#/components/schemas/signature_order"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_order"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "valid",
              "executed",
              "refunded",
              "rejected"
            ]
          }
        },
        "required": [
          "status",
          "payment",
          "signature",
          "quantity",
          "campaign",
          "user",
          "tsp",
          "id"
        ],
        "additionalProperties": false
      },
      "page_links": {
        "title": "links",
        "type": "object",
        "properties": {
          "current": {
            "$ref": "#/components/schemas/url"
          },
          "next": {
            "$ref": "#/components/schemas/url"
          },
          "prev": {
            "$ref": "#/components/schemas/url"
          }
        },
        "required": [
          "current"
        ],
        "additionalProperties": false
      },
      "page_meta": {
        "title": "meta",
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/uint"
          },
          "offset": {
            "$ref": "#/components/schemas/uint"
          },
          "limit": {
            "$ref": "#/components/schemas/uint"
          },
          "current_page": {
            "$ref": "#/components/schemas/uint"
          },
          "total_pages": {
            "$ref": "#/components/schemas/uint"
          }
        },
        "required": [
          "total_pages",
          "current_page",
          "limit",
          "offset",
          "total"
        ],
        "additionalProperties": false
      },
      "palette": {
        "title": "palette",
        "type": "object",
        "properties": {
          "primary": {
            "type": "string"
          },
          "secondary": {
            "type": "string"
          },
          "tertiary": {
            "type": "string"
          }
        },
        "required": [
          "primary"
        ],
        "additionalProperties": false
      },
      "payment_campaign_or_wallet": {
        "oneOf": [
          {
            "title": "campaign",
            "oneOf": [
              {
                "title": "bridgeapi",
                "type": "object",
                "properties": {
                  "bridgeapi": {
                    "type": "string"
                  }
                },
                "required": [
                  "bridgeapi"
                ],
                "additionalProperties": false
              },
              {
                "title": "mangopay",
                "type": "object",
                "properties": {
                  "mangopay": {
                    "type": "string"
                  }
                },
                "required": [
                  "mangopay"
                ],
                "additionalProperties": false
              },
              {
                "title": "dev",
                "type": "object",
                "properties": {
                  "dev": {
                    "type": "string"
                  }
                },
                "required": [
                  "dev"
                ],
                "additionalProperties": false
              }
            ]
          },
          {
            "title": "wallet",
            "type": "object",
            "properties": {
              "bridgeapi": {
                "type": "object",
                "additionalProperties": false
              },
              "mangopay": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "string"
                  },
                  "CreationDate": {
                    "type": "number"
                  },
                  "Owners": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Currency": {
                    "$ref": "#/components/schemas/currency_iso"
                  },
                  "Tag": {
                    "type": "string",
                    "nullable": true
                  },
                  "Balance": {
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/currency_iso"
                      }
                    },
                    "required": [
                      "Currency",
                      "Amount"
                    ],
                    "additionalProperties": false
                  },
                  "FundsType": {
                    "type": "string",
                    "enum": [
                      "DEFAULT",
                      "FEES",
                      "CREDIT"
                    ]
                  }
                },
                "required": [
                  "FundsType",
                  "Balance",
                  "Currency",
                  "Description",
                  "Owners",
                  "CreationDate",
                  "Id"
                ]
              },
              "dev": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                },
                "required": [
                  "amount",
                  "id"
                ],
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "payment_config": {
        "type": "object",
        "properties": {
          "bridgeapi": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "beneficiary": {
                "oneOf": [
                  {
                    "title": "company",
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "bic": {
                        "type": "string"
                      },
                      "bank_name": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "virtual_iban_mode": {
                        "type": "string",
                        "enum": [
                          "ondemand",
                          "auto"
                        ]
                      },
                      "virtual_iban_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "company_name"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "private",
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "bic": {
                        "type": "string"
                      },
                      "bank_name": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "virtual_iban_mode": {
                        "type": "string",
                        "enum": [
                          "ondemand",
                          "auto"
                        ]
                      },
                      "virtual_iban_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "last_name",
                      "first_name"
                    ],
                    "additionalProperties": false
                  }
                ]
              },
              "callback": {
                "$ref": "#/components/schemas/url"
              },
              "expiration": {
                "type": "number"
              },
              "currency": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "EUR"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "user": {
                "oneOf": [
                  {
                    "title": "company",
                    "type": "object",
                    "properties": {
                      "company_name": {
                        "type": "string"
                      },
                      "external_reference": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "ip_address": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "company_name"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "private",
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "external_reference": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "ip_address": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "last_name",
                      "first_name"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "client_id"
            ],
            "additionalProperties": false
          },
          "mangopay": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "host": {
                "$ref": "#/components/schemas/url"
              },
              "wallets_user": {
                "type": "string"
              },
              "bank_accounts_user": {
                "type": "string"
              },
              "admin_wallet": {
                "type": "string"
              },
              "currency": {
                "$ref": "#/components/schemas/currency_iso"
              }
            },
            "required": [
              "bank_accounts_user",
              "wallets_user",
              "host",
              "client_id"
            ],
            "additionalProperties": false
          },
          "dev": {
            "type": "null"
          }
        },
        "additionalProperties": false
      },
      "payment_id": {
        "oneOf": [
          {
            "title": "bridgeapi",
            "type": "object",
            "properties": {
              "bridgeapi": {
                "type": "string"
              }
            },
            "required": [
              "bridgeapi"
            ],
            "additionalProperties": false
          },
          {
            "title": "mangopay",
            "type": "object",
            "properties": {
              "mangopay": {
                "type": "string"
              }
            },
            "required": [
              "mangopay"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "object",
            "properties": {
              "dev": {
                "type": "string"
              }
            },
            "required": [
              "dev"
            ],
            "additionalProperties": false
          }
        ]
      },
      "payment_kind": {
        "type": "string",
        "enum": [
          "bridgeapi",
          "mangopay",
          "dev"
        ]
      },
      "payment_order": {
        "oneOf": [
          {
            "title": "bridgeapi",
            "oneOf": [
              {
                "title": "pending",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "bridgeapi": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "bridgeapi"
                    ],
                    "additionalProperties": false
                  },
                  "pending": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "required": [
                  "pending",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "valid",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "bridgeapi": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "bridgeapi"
                    ],
                    "additionalProperties": false
                  },
                  "valid": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "required": [
                  "valid",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "funded",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "bridgeapi": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "bridgeapi"
                    ],
                    "additionalProperties": false
                  },
                  "funded": {
                    "type": "string"
                  }
                },
                "required": [
                  "funded",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "refunded",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "bridgeapi": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "bridgeapi"
                    ],
                    "additionalProperties": false
                  },
                  "refunded": {
                    "type": "object",
                    "properties": {
                      "transfer": {
                        "type": "string"
                      },
                      "refund": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "refund",
                      "transfer"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "refunded",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "rejected",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "bridgeapi": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "bridgeapi"
                    ],
                    "additionalProperties": false
                  },
                  "rejected": {
                    "type": "string"
                  }
                },
                "required": [
                  "rejected",
                  "id"
                ],
                "additionalProperties": false
              }
            ]
          },
          {
            "title": "mangopay",
            "oneOf": [
              {
                "title": "pending",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "mangopay": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "mangopay"
                    ],
                    "additionalProperties": false
                  },
                  "pending": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "wallet": {
                            "type": "string"
                          },
                          "banking_alias": {
                            "type": "string"
                          },
                          "bank_account": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "banking_alias",
                          "wallet"
                        ],
                        "additionalProperties": false
                      },
                      "amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "amount",
                      "user",
                      "campaign"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "pending",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "valid",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "mangopay": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "mangopay"
                    ],
                    "additionalProperties": false
                  },
                  "valid": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "wallet": {
                            "type": "string"
                          },
                          "banking_alias": {
                            "type": "string"
                          },
                          "bank_account": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "banking_alias",
                          "wallet"
                        ],
                        "additionalProperties": false
                      },
                      "amount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "amount",
                      "user",
                      "campaign"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "valid",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "funded",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "mangopay": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "mangopay"
                    ],
                    "additionalProperties": false
                  },
                  "funded": {
                    "type": "string"
                  }
                },
                "required": [
                  "funded",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "refunded",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "mangopay": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "mangopay"
                    ],
                    "additionalProperties": false
                  },
                  "refunded": {
                    "type": "object",
                    "properties": {
                      "transfer": {
                        "type": "string"
                      },
                      "refund": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "refund",
                      "transfer"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "refunded",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "rejected",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "mangopay": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "mangopay"
                    ],
                    "additionalProperties": false
                  },
                  "rejected": {
                    "type": "string"
                  }
                },
                "required": [
                  "rejected",
                  "id"
                ],
                "additionalProperties": false
              }
            ]
          },
          {
            "title": "dev",
            "oneOf": [
              {
                "title": "pending",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "pending": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "processed": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "amount",
                      "user",
                      "campaign"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "pending",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "valid",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "valid": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "processed": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "amount",
                      "user",
                      "campaign"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "valid",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "funded",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "funded": {
                    "type": "string"
                  }
                },
                "required": [
                  "funded",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "refunded",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "refunded": {
                    "type": "object",
                    "properties": {
                      "transfer": {
                        "type": "string"
                      },
                      "refund": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "refund",
                      "transfer"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "refunded",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "rejected",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "rejected": {
                    "type": "string"
                  }
                },
                "required": [
                  "rejected",
                  "id"
                ],
                "additionalProperties": false
              }
            ]
          }
        ]
      },
      "payment_payin": {
        "oneOf": [
          {
            "title": "bridgeapi",
            "type": "object",
            "properties": {
              "bridgeapi": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "bridgeapi"
            ],
            "additionalProperties": false
          },
          {
            "title": "mangopay",
            "type": "object",
            "properties": {
              "mangopay": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "string"
                  },
                  "CreationDate": {
                    "type": "number"
                  },
                  "AuthorId": {
                    "type": "string"
                  },
                  "CreditedWalletId": {
                    "type": "string"
                  },
                  "CreditedUserId": {
                    "type": "string",
                    "nullable": true
                  },
                  "DebitedFunds": {
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/currency_iso"
                      }
                    },
                    "required": [
                      "Currency",
                      "Amount"
                    ],
                    "additionalProperties": false
                  },
                  "Fees": {
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/currency_iso"
                      }
                    },
                    "required": [
                      "Currency",
                      "Amount"
                    ],
                    "additionalProperties": false
                  },
                  "SecureMode": {
                    "type": "string",
                    "nullable": true
                  },
                  "StatementDescriptor": {
                    "type": "string",
                    "nullable": true
                  },
                  "Billing": {
                    "type": "object",
                    "properties": {
                      "FirstName": {
                        "type": "string"
                      },
                      "LastName": {
                        "type": "string"
                      },
                      "Address": {
                        "$ref": "#/components/schemas/address"
                      }
                    },
                    "additionalProperties": false,
                    "nullable": true
                  },
                  "Shipping": {
                    "type": "object",
                    "properties": {
                      "FirstName": {
                        "type": "string"
                      },
                      "LastName": {
                        "type": "string"
                      },
                      "Address": {
                        "$ref": "#/components/schemas/address"
                      }
                    },
                    "additionalProperties": false,
                    "nullable": true
                  },
                  "Tag": {
                    "type": "string",
                    "nullable": true
                  },
                  "BankName": {
                    "type": "string",
                    "nullable": true
                  },
                  "CreditedFunds": {
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/currency_iso"
                      }
                    },
                    "required": [
                      "Currency",
                      "Amount"
                    ],
                    "additionalProperties": false
                  },
                  "DebitedWalletId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ExecutionType": {
                    "type": "string",
                    "enum": [
                      "WEB",
                      "DIRECT",
                      "EXTERNAL_INSTRUCTION"
                    ]
                  },
                  "CardId": {
                    "type": "string",
                    "nullable": true
                  },
                  "ReturnURL": {
                    "type": "string",
                    "nullable": true
                  },
                  "RedirectURL": {
                    "type": "string",
                    "nullable": true
                  },
                  "TemplateURL": {
                    "type": "string",
                    "nullable": true
                  },
                  "SecureModeReturnURL": {
                    "type": "string",
                    "nullable": true
                  },
                  "SecureModeRedirectURL": {
                    "type": "string",
                    "nullable": true
                  },
                  "SecureModeNeeded": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "Culture": {
                    "type": "string"
                  },
                  "BrowserInfo": {
                    "type": "object",
                    "properties": {
                      "AcceptHeader": {
                        "type": "string"
                      },
                      "JavaEnabled": {
                        "type": "boolean"
                      },
                      "Language": {
                        "type": "string"
                      },
                      "ColorDepth": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "ScreenHeight": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "ScreenWidth": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "TimeZoneOffset": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "UserAgent": {
                        "type": "string"
                      },
                      "JavascriptEnabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "JavascriptEnabled",
                      "UserAgent",
                      "TimeZoneOffset",
                      "ScreenWidth",
                      "ScreenHeight",
                      "ColorDepth",
                      "Language",
                      "JavaEnabled",
                      "AcceptHeader"
                    ],
                    "additionalProperties": false,
                    "nullable": true
                  },
                  "IpAddress": {
                    "type": "string",
                    "nullable": true
                  },
                  "CardType": {
                    "type": "string",
                    "nullable": true
                  },
                  "Requested3DSVersion": {
                    "type": "string",
                    "nullable": true
                  },
                  "Applied3DSVersion": {
                    "type": "string",
                    "nullable": true
                  },
                  "RecurringPayinRegistrationId": {
                    "type": "string",
                    "nullable": true
                  },
                  "SecurityInfo": {},
                  "Status": {
                    "type": "string",
                    "enum": [
                      "CREATED",
                      "SUCCEEDED",
                      "FAILED"
                    ]
                  },
                  "ResultCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "ResultMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "ExecutionDate": {
                    "type": "number",
                    "nullable": true
                  },
                  "Type": {
                    "type": "string",
                    "enum": [
                      "PAYIN",
                      "TRANSFER",
                      "PAYOUT"
                    ]
                  },
                  "Nature": {
                    "type": "string",
                    "enum": [
                      "REGULAR",
                      "REPUDIATION",
                      "REFUND",
                      "SETTLEMENT"
                    ]
                  },
                  "PaymentType": {
                    "type": "string",
                    "enum": [
                      "CARD",
                      "DIRECT_DEBIT",
                      "PREAUTHORIZED",
                      "BANK_WIRE"
                    ]
                  }
                },
                "required": [
                  "PaymentType",
                  "Nature",
                  "Type",
                  "Status",
                  "Culture",
                  "ExecutionType",
                  "CreditedFunds",
                  "Fees",
                  "DebitedFunds",
                  "CreditedWalletId",
                  "AuthorId",
                  "CreationDate",
                  "Id"
                ]
              }
            },
            "required": [
              "mangopay"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "object",
            "properties": {
              "dev": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "dev"
            ],
            "additionalProperties": false
          }
        ]
      },
      "payment_payin_info": {
        "oneOf": [
          {
            "title": "bridgeapi",
            "type": "object",
            "properties": {
              "bridgeapi": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "bridgeapi"
            ],
            "additionalProperties": false
          },
          {
            "title": "mangopay",
            "type": "object",
            "properties": {
              "mangopay": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "return_url": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "required": [
                  "return_url",
                  "amount"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "mangopay"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "object",
            "properties": {
              "dev": {
                "type": "number"
              }
            },
            "required": [
              "dev"
            ],
            "additionalProperties": false
          }
        ]
      },
      "payment_transfer": {
        "oneOf": [
          {
            "title": "bridgeapi",
            "type": "object",
            "properties": {
              "bridgeapi": {}
            },
            "required": [
              "bridgeapi"
            ],
            "additionalProperties": false
          },
          {
            "title": "mangopay",
            "type": "object",
            "properties": {
              "mangopay": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "string"
                  },
                  "Tag": {
                    "type": "string",
                    "nullable": true
                  },
                  "CreationDate": {
                    "type": "number"
                  },
                  "DebitedFunds": {
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/currency_iso"
                      }
                    },
                    "required": [
                      "Currency",
                      "Amount"
                    ],
                    "additionalProperties": false
                  },
                  "CreditedFunds": {
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/currency_iso"
                      }
                    },
                    "required": [
                      "Currency",
                      "Amount"
                    ],
                    "additionalProperties": false
                  },
                  "Fees": {
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/currency_iso"
                      }
                    },
                    "required": [
                      "Currency",
                      "Amount"
                    ],
                    "additionalProperties": false
                  },
                  "DebitedWalletId": {
                    "type": "string",
                    "nullable": true
                  },
                  "CreditedWalletId": {
                    "type": "string",
                    "nullable": true
                  },
                  "AuthorId": {
                    "type": "string"
                  },
                  "CreditedUserId": {
                    "type": "string",
                    "nullable": true
                  },
                  "Nature": {
                    "type": "string",
                    "enum": [
                      "REGULAR",
                      "REPUDIATION",
                      "REFUND",
                      "SETTLEMENT"
                    ]
                  },
                  "Status": {
                    "type": "string",
                    "enum": [
                      "CREATED",
                      "SUCCEEDED",
                      "FAILED"
                    ]
                  },
                  "ExecutionDate": {
                    "type": "number",
                    "nullable": true
                  },
                  "ResultCode": {
                    "type": "string",
                    "nullable": true
                  },
                  "ResultMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "Type": {
                    "type": "string",
                    "enum": [
                      "PAYIN",
                      "TRANSFER",
                      "PAYOUT"
                    ]
                  },
                  "DepositId": {}
                },
                "required": [
                  "Type",
                  "Status",
                  "Nature",
                  "AuthorId",
                  "Fees",
                  "CreditedFunds",
                  "DebitedFunds",
                  "CreationDate",
                  "Id"
                ]
              }
            },
            "required": [
              "mangopay"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "object",
            "properties": {
              "dev": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "dev"
            ],
            "additionalProperties": false
          }
        ]
      },
      "payment_user": {
        "type": "object",
        "properties": {
          "bridgeapi": {
            "type": "object",
            "properties": {
              "info": {
                "oneOf": [
                  {
                    "title": "company",
                    "type": "object",
                    "properties": {
                      "company_name": {
                        "type": "string"
                      },
                      "external_reference": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "ip_address": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "company_name"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "private",
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "external_reference": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "ip_address": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "last_name",
                      "first_name"
                    ],
                    "additionalProperties": false
                  }
                ]
              },
              "provider_id": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              },
              "payout": {
                "oneOf": [
                  {
                    "title": "company",
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "bic": {
                        "type": "string"
                      },
                      "bank_name": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "virtual_iban_mode": {
                        "type": "string",
                        "enum": [
                          "ondemand",
                          "auto"
                        ]
                      },
                      "virtual_iban_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "company_name"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "private",
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "bic": {
                        "type": "string"
                      },
                      "bank_name": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "virtual_iban_mode": {
                        "type": "string",
                        "enum": [
                          "ondemand",
                          "auto"
                        ]
                      },
                      "virtual_iban_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "last_name",
                      "first_name"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "info"
            ],
            "additionalProperties": false
          },
          "mangopay": {
            "type": "object",
            "properties": {
              "wallet": {
                "type": "string"
              },
              "banking_alias": {
                "type": "string"
              },
              "bank_account": {
                "type": "string"
              }
            },
            "required": [
              "banking_alias",
              "wallet"
            ],
            "additionalProperties": false
          },
          "dev": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "payment_user_payout": {
        "oneOf": [
          {
            "title": "bridgeapi",
            "type": "object",
            "properties": {
              "bridgeapi": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  },
                  "bic": {
                    "type": "string"
                  }
                },
                "required": [
                  "iban"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "bridgeapi"
            ],
            "additionalProperties": false
          },
          {
            "title": "mangopay",
            "type": "object",
            "properties": {
              "mangopay": {
                "type": "object",
                "properties": {
                  "address": {
                    "$ref": "#/components/schemas/user_address"
                  },
                  "iban": {
                    "type": "string"
                  },
                  "bic": {
                    "type": "string"
                  }
                },
                "required": [
                  "iban",
                  "address"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "mangopay"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "object",
            "properties": {
              "dev": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "dev"
            ],
            "additionalProperties": false
          }
        ]
      },
      "payment_wallet": {
        "type": "object",
        "properties": {
          "bridgeapi": {
            "type": "object",
            "additionalProperties": false
          },
          "mangopay": {
            "type": "object",
            "properties": {
              "Id": {
                "type": "string"
              },
              "CreationDate": {
                "type": "number"
              },
              "Owners": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Description": {
                "type": "string"
              },
              "Currency": {
                "$ref": "#/components/schemas/currency_iso"
              },
              "Tag": {
                "type": "string",
                "nullable": true
              },
              "Balance": {
                "type": "object",
                "properties": {
                  "Amount": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "Currency": {
                    "$ref": "#/components/schemas/currency_iso"
                  }
                },
                "required": [
                  "Currency",
                  "Amount"
                ],
                "additionalProperties": false
              },
              "FundsType": {
                "type": "string",
                "enum": [
                  "DEFAULT",
                  "FEES",
                  "CREDIT"
                ]
              }
            },
            "required": [
              "FundsType",
              "Balance",
              "Currency",
              "Description",
              "Owners",
              "CreationDate",
              "Id"
            ]
          },
          "dev": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            },
            "required": [
              "amount",
              "id"
            ],
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "pk": {
        "title": "pk",
        "type": "string"
      },
      "pkh": {
        "title": "pkh",
        "type": "string"
      },
      "poll": {
        "title": "poll",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "project": {
            "$ref": "#/components/schemas/id"
          },
          "start": {
            "$ref": "#/components/schemas/tsp"
          },
          "end_": {
            "$ref": "#/components/schemas/tsp"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiple": {
            "type": "boolean"
          },
          "info": {},
          "results": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": -1073741824,
              "maximum": 1073741823
            }
          }
        },
        "required": [
          "info",
          "choices",
          "end_",
          "start",
          "project"
        ],
        "additionalProperties": false
      },
      "poll_vote": {
        "title": "poll_vote",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "poll": {
            "$ref": "#/components/schemas/id"
          },
          "tsp": {
            "$ref": "#/components/schemas/tsp"
          },
          "user": {
            "$ref": "#/components/schemas/user_auth_email"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "choices",
          "user",
          "tsp",
          "poll"
        ],
        "additionalProperties": false
      },
      "primitive": {
        "title": "primitive",
        "type": "string",
        "enum": [
          "parameter",
          "storage",
          "code",
          "False",
          "Elt",
          "Left",
          "None",
          "Pair",
          "Right",
          "Some",
          "True",
          "Unit",
          "PACK",
          "UNPACK",
          "BLAKE2B",
          "SHA256",
          "SHA512",
          "ABS",
          "ADD",
          "AMOUNT",
          "AND",
          "BALANCE",
          "CAR",
          "CDR",
          "CHECK_SIGNATURE",
          "COMPARE",
          "CONCAT",
          "CONS",
          "CREATE_ACCOUNT",
          "CREATE_CONTRACT",
          "IMPLICIT_ACCOUNT",
          "DIP",
          "DROP",
          "DUP",
          "EDIV",
          "EMPTY_MAP",
          "EMPTY_SET",
          "EQ",
          "EXEC",
          "FAILWITH",
          "GE",
          "GET",
          "GT",
          "HASH_KEY",
          "IF",
          "IF_CONS",
          "IF_LEFT",
          "IF_NONE",
          "INT",
          "LAMBDA",
          "LE",
          "LEFT",
          "LOOP",
          "LSL",
          "LSR",
          "LT",
          "MAP",
          "MEM",
          "MUL",
          "NEG",
          "NEQ",
          "NIL",
          "NONE",
          "NOT",
          "NOW",
          "OR",
          "PAIR",
          "PUSH",
          "RIGHT",
          "SIZE",
          "SOME",
          "SOURCE",
          "SENDER",
          "SELF",
          "STEPS_TO_QUOTA",
          "SUB",
          "SWAP",
          "TRANSFER_TOKENS",
          "SET_DELEGATE",
          "UNIT",
          "UPDATE",
          "XOR",
          "ITER",
          "LOOP_LEFT",
          "ADDRESS",
          "CONTRACT",
          "ISNAT",
          "CAST",
          "RENAME",
          "bool",
          "contract",
          "int",
          "key",
          "key_hash",
          "lambda",
          "list",
          "map",
          "big_map",
          "nat",
          "option",
          "or",
          "pair",
          "set",
          "signature",
          "string",
          "bytes",
          "mutez",
          "timestamp",
          "unit",
          "operation",
          "address",
          "SLICE",
          "DIG",
          "DUG",
          "EMPTY_BIG_MAP",
          "APPLY",
          "chain_id",
          "CHAIN_ID",
          "LEVEL",
          "SELF_ADDRESS",
          "never",
          "NEVER",
          "UNPAIR",
          "VOTING_POWER",
          "TOTAL_VOTING_POWER",
          "KECCAK",
          "SHA3",
          "PAIRING_CHECK",
          "bls12_381_g1",
          "bls12_381_g2",
          "bls12_381_fr",
          "sapling_state",
          "sapling_transaction_deprecated",
          "SAPLING_EMPTY_STATE",
          "SAPLING_VERIFY_UPDATE",
          "ticket",
          "TICKET_DEPRECATED",
          "READ_TICKET",
          "SPLIT_TICKET",
          "JOIN_TICKETS",
          "GET_AND_UPDATE",
          "chest",
          "chest_key",
          "OPEN_CHEST",
          "VIEW",
          "view",
          "constant",
          "SUB_MUTEZ",
          "tx_rollup_l2_address",
          "MIN_BLOCK_TIME",
          "sapling_transaction",
          "EMIT",
          "Lambda_rec",
          "LAMBDA_REC",
          "TICKET",
          "BYTES",
          "NAT"
        ]
      },
      "project": {
        "title": "project",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "name": {
            "type": "string"
          },
          "batches": {
            "$ref": "#/components/schemas/uint"
          },
          "price": {
            "type": "number"
          },
          "public": {
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/project_location"
          },
          "info": {
            "$ref": "#/components/schemas/project_info"
          },
          "files": {
            "$ref": "#/components/schemas/project_files"
          },
          "blockchain": {
            "$ref": "#/components/schemas/project_blockchain"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_kind"
          },
          "project_stats": {
            "$ref": "#/components/schemas/project_stats"
          }
        },
        "required": [
          "payment",
          "files",
          "info",
          "price",
          "batches",
          "name"
        ],
        "additionalProperties": false
      },
      "project_blockchain": {
        "title": "project_blockchain",
        "type": "object",
        "properties": {
          "contract": {
            "type": "string"
          },
          "token_id": {
            "$ref": "#/components/schemas/token_id"
          }
        },
        "required": [
          "token_id",
          "contract"
        ],
        "additionalProperties": false
      },
      "project_files": {
        "title": "project_files",
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/url"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/url"
            }
          }
        },
        "required": [
          "images",
          "links"
        ],
        "additionalProperties": false
      },
      "project_info": {
        "title": "project_info",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "object"
          },
          "features": {
            "type": "string"
          },
          "strategy": {
            "type": "string"
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project_url"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "creators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "transferable": {
            "type": "boolean"
          }
        },
        "required": [
          "creators",
          "tags",
          "strategy",
          "features",
          "attributes",
          "description"
        ],
        "additionalProperties": false
      },
      "project_location": {
        "title": "project_location",
        "type": "object",
        "properties": {
          "street_number": {
            "type": "string"
          },
          "street_name": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "project_payout_input": {
        "title": "project_payout_input",
        "type": "object",
        "properties": {
          "project": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740992
          },
          "title": {
            "type": "string"
          },
          "start": {
            "$ref": "#/components/schemas/date"
          },
          "end": {
            "$ref": "#/components/schemas/date"
          },
          "amount": {
            "type": "number"
          },
          "fees": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "project"
        ],
        "additionalProperties": false
      },
      "project_stats": {
        "title": "project_stats",
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/uint"
          },
          "available": {
            "$ref": "#/components/schemas/uint"
          },
          "frozen": {
            "$ref": "#/components/schemas/uint"
          },
          "orders": {
            "$ref": "#/components/schemas/uint"
          },
          "buyers": {
            "$ref": "#/components/schemas/uint"
          },
          "pending": {
            "$ref": "#/components/schemas/uint"
          },
          "valid": {
            "$ref": "#/components/schemas/uint"
          },
          "executed": {
            "$ref": "#/components/schemas/uint"
          },
          "refunded": {
            "$ref": "#/components/schemas/uint"
          },
          "rejected": {
            "$ref": "#/components/schemas/uint"
          },
          "collected": {
            "$ref": "#/components/schemas/uint"
          },
          "amount_collected": {
            "type": "number"
          }
        },
        "required": [
          "amount_collected",
          "collected",
          "rejected",
          "refunded",
          "executed",
          "valid",
          "pending",
          "buyers",
          "orders",
          "frozen",
          "available",
          "campaigns"
        ],
        "additionalProperties": false
      },
      "project_url": {
        "title": "project_url",
        "type": "object",
        "properties": {
          "link": {
            "$ref": "#/components/schemas/url"
          },
          "thumbnail": {
            "$ref": "#/components/schemas/url"
          }
        },
        "required": [
          "link"
        ],
        "additionalProperties": false
      },
      "project_with_campaigns": {
        "title": "project_with_campaigns",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "name": {
            "type": "string"
          },
          "batches": {
            "$ref": "#/components/schemas/uint"
          },
          "price": {
            "type": "number"
          },
          "public": {
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/project_location"
          },
          "info": {
            "$ref": "#/components/schemas/project_info"
          },
          "files": {
            "$ref": "#/components/schemas/project_files"
          },
          "blockchain": {
            "$ref": "#/components/schemas/project_blockchain"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_kind"
          },
          "project_stats": {
            "$ref": "#/components/schemas/project_stats"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "title": "campaign_with_project_id",
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "project": {
                  "$ref": "#/components/schemas/id"
                },
                "info": {
                  "$ref": "#/components/schemas/campaign_info"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "created",
                    "available",
                    "canceled",
                    "closed",
                    "minted"
                  ]
                },
                "available": {
                  "$ref": "#/components/schemas/uint"
                },
                "frozen": {
                  "$ref": "#/components/schemas/uint"
                },
                "refunded": {
                  "$ref": "#/components/schemas/uint"
                },
                "payment": {
                  "$ref": "#/components/schemas/payment_campaign_or_wallet"
                },
                "campaign_stats": {
                  "$ref": "#/components/schemas/campaign_stats"
                },
                "orders": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/order_with_ids"
                  }
                },
                "stats": {
                  "$ref": "#/components/schemas/grouping_stats"
                }
              },
              "required": [
                "orders",
                "payment",
                "refunded",
                "frozen",
                "available",
                "status",
                "info",
                "project"
              ],
              "additionalProperties": false
            }
          },
          "stats": {
            "$ref": "#/components/schemas/grouping_stats"
          }
        },
        "required": [
          "stats",
          "payment",
          "files",
          "info",
          "price",
          "batches",
          "name"
        ],
        "additionalProperties": false
      },
      "sc_commitment_hash": {
        "title": "sc_commitment_hash",
        "type": "string"
      },
      "sc_rollup_hash": {
        "title": "sc_rollup_hash",
        "type": "string"
      },
      "sc_state_hash": {
        "title": "sc_state_hash",
        "type": "string"
      },
      "script_expr": {
        "title": "script_expr",
        "oneOf": [
          {
            "title": "micheline",
            "$ref": "#/components/schemas/micheline"
          },
          {
            "title": "bytes",
            "$ref": "#/components/schemas/hex"
          }
        ]
      },
      "script_expr_hash": {
        "title": "script_expr_hash",
        "type": "string"
      },
      "signature_campaign": {
        "oneOf": [
          {
            "title": "signaturit",
            "type": "object",
            "properties": {
              "signaturit": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "signaturit"
            ],
            "additionalProperties": false
          },
          {
            "title": "docuseal",
            "type": "object",
            "properties": {
              "docuseal": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823,
                "nullable": true
              }
            },
            "required": [
              "docuseal"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "object",
            "properties": {
              "dev": {
                "type": "null"
              }
            },
            "required": [
              "dev"
            ],
            "additionalProperties": false
          }
        ]
      },
      "signature_config": {
        "type": "object",
        "properties": {
          "docuseal": {
            "type": "object",
            "properties": {
              "template": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "oneOf": [
                        {
                          "title": "field_kind",
                          "type": "string",
                          "enum": [
                            "amount",
                            "date",
                            "price",
                            "quantity",
                            "generic_name",
                            "address",
                            "phone",
                            "email",
                            "name",
                            "first_name",
                            "last_name",
                            "citizenship",
                            "birthday",
                            "birth_city",
                            "birth_country",
                            "country",
                            "individual_email",
                            "siren",
                            "company_name",
                            "company_country",
                            "company_email"
                          ]
                        },
                        {
                          "title": "generic",
                          "type": "string"
                        }
                      ]
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "values",
                    "kind"
                  ],
                  "additionalProperties": false
                }
              },
              "expiration": {
                "type": "number"
              }
            },
            "required": [
              "template"
            ],
            "additionalProperties": false
          },
          "signaturit": {
            "type": "object",
            "properties": {
              "api": {
                "$ref": "#/components/schemas/url"
              },
              "events": {
                "$ref": "#/components/schemas/url"
              },
              "template": {
                "type": "string"
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "oneOf": [
                        {
                          "title": "field_kind",
                          "type": "string",
                          "enum": [
                            "amount",
                            "date",
                            "price",
                            "quantity",
                            "generic_name",
                            "address",
                            "phone",
                            "email",
                            "name",
                            "first_name",
                            "last_name",
                            "citizenship",
                            "birthday",
                            "birth_city",
                            "birth_country",
                            "country",
                            "individual_email",
                            "siren",
                            "company_name",
                            "company_country",
                            "company_email"
                          ]
                        },
                        {
                          "title": "generic",
                          "type": "string"
                        }
                      ]
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "values",
                    "kind"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "api"
            ],
            "additionalProperties": false
          },
          "dev": {
            "type": "null"
          }
        },
        "additionalProperties": false
      },
      "signature_hook": {
        "oneOf": [
          {
            "title": "signaturit",
            "type": "object",
            "properties": {
              "created_at": {
                "type": "string"
              },
              "type": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "email_processed",
                      "email_delivered",
                      "email_openend",
                      "email_bounced",
                      "email_deferred",
                      "reminder_email_processed",
                      "reminder_email_delivered",
                      "reminder_email_opened",
                      "sms_processed",
                      "sms_delivered",
                      "password_sms_processed",
                      "password_sms_delivered",
                      "document_opened",
                      "document_signed",
                      "document_completed",
                      "audit_trail_completed",
                      "document_declined",
                      "document_expired",
                      "document_canceled",
                      "photo_added",
                      "voice_added",
                      "file_added",
                      "photo_id_added",
                      "terms_and_conditions_accepted",
                      "content_widgets_filled"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "document": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "type": {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "email_processed",
                                "email_delivered",
                                "email_openend",
                                "email_bounced",
                                "email_deferred",
                                "reminder_email_processed",
                                "reminder_email_delivered",
                                "reminder_email_opened",
                                "sms_processed",
                                "sms_delivered",
                                "password_sms_processed",
                                "password_sms_delivered",
                                "document_opened",
                                "document_signed",
                                "document_completed",
                                "audit_trail_completed",
                                "document_declined",
                                "document_expired",
                                "document_canceled",
                                "photo_added",
                                "voice_added",
                                "file_added",
                                "photo_id_added",
                                "terms_and_conditions_accepted",
                                "content_widgets_filled"
                              ]
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "created_at"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "file": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "pages": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "size": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      }
                    },
                    "required": [
                      "size",
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "in_queue",
                      "ready",
                      "signing",
                      "completed",
                      "expired",
                      "declined",
                      "error",
                      "canceled"
                    ]
                  },
                  "data": {
                    "type": "object"
                  },
                  "decline_reason": {
                    "type": "string"
                  },
                  "signature": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "required": [
                  "status",
                  "name",
                  "file",
                  "events",
                  "email",
                  "created_at",
                  "id"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "document",
              "type",
              "created_at"
            ],
            "additionalProperties": false
          },
          {
            "title": "docuseal",
            "type": "object",
            "properties": {
              "event_type": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "data": {
                "oneOf": [
                  {
                    "title": "form",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "submission_id": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "email": {
                        "type": "string"
                      },
                      "ua": {
                        "type": "string"
                      },
                      "ip": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "role": {
                        "type": "string"
                      },
                      "external_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "application_key": {
                        "type": "string",
                        "nullable": true
                      },
                      "decline_reason": {
                        "type": "string",
                        "nullable": true
                      },
                      "sent_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "opened_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "completed_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "declined_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "submission": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": -1073741824,
                            "maximum": 1073741823
                          },
                          "audit_log_url": {
                            "type": "string",
                            "nullable": true
                          },
                          "combined_document_url": {
                            "type": "string",
                            "nullable": true
                          },
                          "status": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "created_at",
                          "url",
                          "status",
                          "id"
                        ],
                        "additionalProperties": false
                      },
                      "template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": -1073741824,
                            "maximum": 1073741823
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "folder_name": {
                            "type": "string",
                            "nullable": true
                          },
                          "external_id": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "updated_at",
                          "created_at",
                          "name",
                          "id"
                        ],
                        "additionalProperties": false
                      },
                      "preferences": {},
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string"
                            },
                            "value": {}
                          },
                          "required": [
                            "value",
                            "field"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "metadata": {},
                      "audit_log_url": {
                        "type": "string",
                        "nullable": true
                      },
                      "submission_url": {
                        "type": "string"
                      },
                      "documents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [
                      "submission_url",
                      "template",
                      "submission",
                      "status",
                      "updated_at",
                      "created_at",
                      "role",
                      "ip",
                      "ua",
                      "email",
                      "submission_id",
                      "id"
                    ]
                  },
                  {
                    "title": "submission",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "slug": {
                        "type": "string"
                      },
                      "source": {
                        "type": "string"
                      },
                      "submitters_order": {
                        "type": "string",
                        "enum": [
                          "random",
                          "preserved"
                        ]
                      },
                      "audit_log_url": {
                        "type": "string",
                        "nullable": true
                      },
                      "combined_document_url": {
                        "type": "string",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "archived_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "submitters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "submission_id": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "uuid": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "sent_at": {
                              "type": "string"
                            },
                            "opened_at": {
                              "type": "string",
                              "nullable": true
                            },
                            "completed_at": {
                              "type": "string",
                              "nullable": true
                            },
                            "declined_at": {
                              "type": "string",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "phone": {
                              "type": "string",
                              "nullable": true
                            },
                            "status": {
                              "type": "string"
                            },
                            "external_id": {
                              "type": "string",
                              "nullable": true
                            },
                            "metadata": {},
                            "preferences": {},
                            "template": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "minimum": -1073741824,
                                  "maximum": 1073741823
                                },
                                "name": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                },
                                "updated_at": {
                                  "type": "string"
                                },
                                "folder_name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "external_id": {
                                  "type": "string",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "updated_at",
                                "created_at",
                                "name",
                                "id"
                              ],
                              "additionalProperties": false
                            },
                            "submission_events": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "minimum": -1073741824,
                                    "maximum": 1073741823
                                  },
                                  "submitter_id": {
                                    "type": "integer",
                                    "minimum": -1073741824,
                                    "maximum": 1073741823
                                  },
                                  "event_type": {
                                    "type": "string"
                                  },
                                  "event_timestamp": {
                                    "type": "string"
                                  },
                                  "data": {}
                                },
                                "required": [
                                  "event_timestamp",
                                  "event_type",
                                  "submitter_id",
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "values": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string"
                                  },
                                  "value": {}
                                },
                                "required": [
                                  "value",
                                  "field"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "documents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "url",
                                  "name"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "role": {
                              "type": "string",
                              "nullable": true
                            },
                            "application_key": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "preferences",
                            "status",
                            "updated_at",
                            "created_at",
                            "sent_at",
                            "slug",
                            "email",
                            "uuid",
                            "submission_id",
                            "id"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": -1073741824,
                            "maximum": 1073741823
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "external_id": {
                            "type": "string",
                            "nullable": true
                          },
                          "folder_name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "folder_name",
                          "updated_at",
                          "created_at",
                          "name",
                          "id"
                        ],
                        "additionalProperties": false
                      },
                      "created_by_user": {},
                      "submission_events": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "submitter_id": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "event_type": {
                              "type": "string"
                            },
                            "event_timestamp": {
                              "type": "string"
                            },
                            "data": {}
                          },
                          "required": [
                            "event_timestamp",
                            "event_type",
                            "submitter_id",
                            "id"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "documents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "status": {
                        "type": "string"
                      },
                      "metadata": {},
                      "completed_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "expire_at": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "status",
                      "template",
                      "submitters",
                      "updated_at",
                      "created_at",
                      "submitters_order",
                      "source",
                      "slug",
                      "id"
                    ]
                  },
                  {
                    "title": "template",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "slug": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "attachment_uuid": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "attachment_uuid"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "submitter_uuid": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "required": {
                              "type": "boolean"
                            },
                            "readonly": {
                              "type": "boolean"
                            },
                            "preferences": {},
                            "default_value": {},
                            "areas": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number"
                                  },
                                  "y": {
                                    "type": "number"
                                  },
                                  "w": {
                                    "type": "number"
                                  },
                                  "h": {
                                    "type": "number"
                                  },
                                  "attachment_uuid": {
                                    "type": "string"
                                  },
                                  "page": {
                                    "type": "integer",
                                    "minimum": -1073741824,
                                    "maximum": 1073741823
                                  }
                                },
                                "required": [
                                  "page",
                                  "attachment_uuid",
                                  "h",
                                  "w",
                                  "y",
                                  "x"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          "required": [
                            "areas",
                            "required",
                            "type",
                            "name",
                            "submitter_uuid",
                            "uuid"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "submitters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "uuid"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "author_id": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "archived_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "source": {
                        "type": "string"
                      },
                      "folder_id": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      },
                      "folder_name": {
                        "type": "string"
                      },
                      "external_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "author": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": -1073741824,
                            "maximum": 1073741823
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "email",
                          "last_name",
                          "first_name",
                          "id"
                        ],
                        "additionalProperties": false
                      },
                      "documents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "minimum": -1073741824,
                              "maximum": 1073741823
                            },
                            "uuid": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            },
                            "preview_image_url": {
                              "type": "string"
                            },
                            "filename": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "filename",
                            "preview_image_url",
                            "url",
                            "uuid",
                            "id"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "preferences": {},
                      "application_key": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "author",
                      "folder_name",
                      "folder_id",
                      "source",
                      "updated_at",
                      "created_at",
                      "author_id",
                      "name",
                      "slug",
                      "id"
                    ]
                  }
                ]
              }
            },
            "required": [
              "data",
              "timestamp",
              "event_type"
            ],
            "additionalProperties": false
          },
          {
            "title": "dev",
            "type": "null"
          }
        ]
      },
      "signature_order": {
        "oneOf": [
          {
            "title": "signaturit",
            "oneOf": [
              {
                "title": "pending",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "signaturit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "signaturit"
                    ],
                    "additionalProperties": false
                  },
                  "pending": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "required": [
                  "pending",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "valid",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "signaturit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "signaturit"
                    ],
                    "additionalProperties": false
                  },
                  "valid": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/url"
                    }
                  }
                },
                "required": [
                  "valid",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "rejected",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "signaturit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "signaturit"
                    ],
                    "additionalProperties": false
                  },
                  "rejected": {
                    "type": "string"
                  }
                },
                "required": [
                  "rejected",
                  "id"
                ],
                "additionalProperties": false
              }
            ]
          },
          {
            "title": "docuseal",
            "oneOf": [
              {
                "title": "pending",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "docuseal": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      }
                    },
                    "required": [
                      "docuseal"
                    ],
                    "additionalProperties": false
                  },
                  "pending": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "required": [
                  "pending",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "valid",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "docuseal": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      }
                    },
                    "required": [
                      "docuseal"
                    ],
                    "additionalProperties": false
                  },
                  "valid": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/url"
                    }
                  }
                },
                "required": [
                  "valid",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "rejected",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "docuseal": {
                        "type": "integer",
                        "minimum": -1073741824,
                        "maximum": 1073741823
                      }
                    },
                    "required": [
                      "docuseal"
                    ],
                    "additionalProperties": false
                  },
                  "rejected": {
                    "type": "string"
                  }
                },
                "required": [
                  "rejected",
                  "id"
                ],
                "additionalProperties": false
              }
            ]
          },
          {
            "title": "dev",
            "oneOf": [
              {
                "title": "pending",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "pending": {
                    "type": "null"
                  }
                },
                "required": [
                  "pending",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "valid",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "valid": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/url"
                    }
                  }
                },
                "required": [
                  "valid",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "title": "rejected",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  },
                  "rejected": {
                    "type": "string"
                  }
                },
                "required": [
                  "rejected",
                  "id"
                ],
                "additionalProperties": false
              }
            ]
          }
        ]
      },
      "storage_diff_item": {
        "title": "storage_diff",
        "oneOf": [
          {
            "title": "big_map",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "big_map"
                ]
              },
              "id": {
                "$ref": "#/components/schemas/zarith"
              },
              "diff": {
                "$ref": "#/components/schemas/big_map_diff"
              }
            },
            "required": [
              "diff",
              "id",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "sapling_state",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "sapling_state"
                ]
              }
            },
            "required": [
              "kind"
            ]
          }
        ]
      },
      "token": {
        "title": "token",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/token_id"
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string"
                },
                "balance": {
                  "type": "string"
                }
              },
              "required": [
                "balance",
                "account"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "assets",
          "id"
        ],
        "additionalProperties": false
      },
      "token_id": {
        "type": "integer",
        "minimum": 0,
        "maximum": 9007199254740992
      },
      "token_with_metadata": {
        "title": "token_with_metadata",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/token_id"
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string"
                },
                "balance": {
                  "type": "string"
                }
              },
              "required": [
                "balance",
                "account"
              ],
              "additionalProperties": false
            }
          },
          "metadata_url": {
            "$ref": "#/components/schemas/url"
          },
          "supply": {
            "type": "string"
          },
          "update": {
            "$ref": "#/components/schemas/id"
          }
        },
        "required": [
          "update",
          "supply",
          "assets",
          "id"
        ],
        "additionalProperties": false
      },
      "tsp": {
        "type": "string",
        "format": "date-time"
      },
      "tx_rollup_hash": {
        "title": "tx_rollup_hash",
        "type": "string"
      },
      "tzfunc_error": {
        "title": "tzfunc_error",
        "oneOf": [
          {
            "title": "forge_error",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "forge_error"
                ]
              },
              "msg": {
                "type": "string"
              }
            },
            "required": [
              "msg",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unexpected_operation_hash",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unexpected_operation_hash"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "no_metadata",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "no_metadata"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "http_error",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "http_error"
                ]
              },
              "code": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              },
              "content": {
                "type": "string"
              }
            },
            "required": [
              "code",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "node_error",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "node_error"
                ]
              },
              "errors": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "errors",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unexpected_operation_bytes",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unexpected_operation_bytes"
                ]
              },
              "local": {
                "$ref": "#/components/schemas/hex"
              },
              "remote": {
                "$ref": "#/components/schemas/hex"
              }
            },
            "required": [
              "remote",
              "local",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "prepare_operation_error",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "prepare_operation_error"
                ]
              },
              "msg": {
                "type": "string"
              }
            },
            "required": [
              "msg",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unknown_language",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown_language"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "not_a_bool",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "not_a_bool"
                ]
              },
              "char": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              }
            },
            "required": [
              "position",
              "char",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "int_too_long",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "int_too_long"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unexpected_tag",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unexpected_tag"
                ]
              },
              "msg": {
                "type": "string"
              },
              "tag": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              }
            },
            "required": [
              "tag",
              "msg",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "no_case_matched",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "no_case_matched"
                ]
              },
              "tag": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823,
                "nullable": true
              }
            },
            "required": [
              "tag",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "recursive_error",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "recursive_error"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "wrong_michelson_type",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "wrong_michelson_type"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unknown_primitive",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown_primitive"
                ]
              },
              "primitive": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "primitive",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unknown_micheline_tag",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown_micheline_tag"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "sign_exn",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "sign_exn"
                ]
              },
              "id": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              },
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "location": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "line_number": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "start_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "end_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                },
                "required": [
                  "end_char",
                  "start_char",
                  "line_number",
                  "filename"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "content",
              "name",
              "id",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "empty_bytes",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "empty_bytes"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unknown_curve",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown_curve"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "string_too_short",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "string_too_short"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unknown_prefix",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unknown_prefix"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "invalid_b58",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "invalid_b58"
                ]
              },
              "id": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              },
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "location": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "line_number": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "start_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "end_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                },
                "required": [
                  "end_char",
                  "start_char",
                  "line_number",
                  "filename"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "content",
              "name",
              "id",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "verify_exn",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "verify_exn"
                ]
              },
              "id": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              },
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "location": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "line_number": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "start_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "end_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                },
                "required": [
                  "end_char",
                  "start_char",
                  "line_number",
                  "filename"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "content",
              "name",
              "id",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "empty_operation_list",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "empty_operation_list"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unexpected_michelson",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unexpected_michelson"
                ]
              },
              "error": {
                "type": "string"
              }
            },
            "required": [
              "error",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "unmacro_error",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "unmacro_error"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "generic",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "name"
            ],
            "additionalProperties": false
          },
          {
            "title": "destruct_exn",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "destruct_exn"
                ]
              },
              "id": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              },
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "location": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "line_number": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "start_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  },
                  "end_char": {
                    "type": "integer",
                    "minimum": -1073741824,
                    "maximum": 1073741823
                  }
                },
                "required": [
                  "end_char",
                  "start_char",
                  "line_number",
                  "filename"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "content",
              "name",
              "id",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "end_of_bytes",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "end_of_bytes"
                ]
              },
              "offset": {
                "type": "integer",
                "minimum": -1073741824,
                "maximum": 1073741823
              }
            },
            "required": [
              "offset",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "operation_not_handled",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "operation_not_handled"
                ]
              }
            },
            "required": [
              "kind"
            ],
            "additionalProperties": false
          }
        ]
      },
      "uint": {
        "type": "integer",
        "minimum": 0,
        "maximum": 9007199254740992
      },
      "uint32": {
        "title": "uint32",
        "type": "integer",
        "minimum": 0,
        "maximum": 2147483647
      },
      "uint64": {
        "title": "uint64",
        "type": "string"
      },
      "update_config": {
        "title": "update_config",
        "oneOf": [
          {
            "title": "client",
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/client_info"
              }
            },
            "required": [
              "client"
            ],
            "additionalProperties": false
          },
          {
            "title": "keys",
            "type": "object",
            "properties": {
              "keys": {
                "oneOf": [
                  {
                    "title": "aws",
                    "type": "object",
                    "properties": {
                      "aws": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "aws"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "db",
                    "type": "object",
                    "properties": {
                      "db": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "db"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "keys"
            ],
            "additionalProperties": false
          },
          {
            "title": "inject",
            "type": "object",
            "properties": {
              "inject": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "enum": [
                      "eth",
                      "tz"
                    ]
                  },
                  "node": {
                    "type": "string"
                  },
                  "sleep": {
                    "type": "number"
                  }
                },
                "required": [
                  "node",
                  "kind"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "inject"
            ],
            "additionalProperties": false
          },
          {
            "title": "contract",
            "type": "object",
            "properties": {
              "contract": {
                "oneOf": [
                  {
                    "title": "tz",
                    "type": "object",
                    "properties": {
                      "tz": {
                        "type": "object",
                        "properties": {
                          "admin": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "string"
                          },
                          "asset": {
                            "type": "string"
                          },
                          "whitelist": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "owner",
                          "admin"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "tz"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "contract"
            ],
            "additionalProperties": false
          },
          {
            "title": "notify",
            "type": "object",
            "properties": {
              "notify": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "title": "hook",
                      "type": "object",
                      "properties": {
                        "hook": {
                          "$ref": "#/components/schemas/url"
                        }
                      },
                      "required": [
                        "hook"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            },
            "required": [
              "notify"
            ],
            "additionalProperties": false
          },
          {
            "title": "auth",
            "type": "object",
            "properties": {
              "auth": {
                "oneOf": [
                  {
                    "title": "dev",
                    "type": "string",
                    "enum": [
                      "dev"
                    ]
                  },
                  {
                    "title": "auth0",
                    "type": "object",
                    "properties": {
                      "auth0": {
                        "type": "object",
                        "properties": {
                          "client": {
                            "type": "string"
                          },
                          "client_id": {
                            "type": "string"
                          },
                          "client_id_mgmt": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "iss": {
                            "type": "string"
                          },
                          "n": {
                            "type": "string"
                          },
                          "e": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "iss",
                          "domain",
                          "client_id_mgmt",
                          "client_id",
                          "client"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "auth0"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "supertokens",
                    "type": "object",
                    "properties": {
                      "supertokens": {
                        "type": "object",
                        "properties": {
                          "api": {
                            "$ref": "#/components/schemas/url"
                          },
                          "client": {
                            "type": "string"
                          },
                          "iss": {
                            "$ref": "#/components/schemas/url"
                          }
                        },
                        "required": [
                          "client",
                          "api"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "supertokens"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "auth"
            ],
            "additionalProperties": false
          },
          {
            "title": "payment",
            "type": "object",
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/payment_config"
              }
            },
            "required": [
              "payment"
            ],
            "additionalProperties": false
          },
          {
            "title": "kyc",
            "type": "object",
            "properties": {
              "kyc": {
                "$ref": "#/components/schemas/kyc_config"
              }
            },
            "required": [
              "kyc"
            ],
            "additionalProperties": false
          },
          {
            "title": "signature",
            "type": "object",
            "properties": {
              "signature": {
                "$ref": "#/components/schemas/signature_config"
              }
            },
            "required": [
              "signature"
            ],
            "additionalProperties": false
          },
          {
            "title": "indexer",
            "type": "object",
            "properties": {
              "indexer": {
                "title": "tz",
                "type": "object",
                "properties": {
                  "nodes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tz": {
                    "type": "object",
                    "properties": {
                      "ledger_ids": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "metadata_ids": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "managed_expr": {
                        "type": "string"
                      },
                      "whitelist_ids": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "tz",
                  "nodes"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "indexer"
            ],
            "additionalProperties": false
          },
          {
            "title": "store",
            "type": "object",
            "properties": {
              "store": {
                "oneOf": [
                  {
                    "title": "aws",
                    "type": "object",
                    "properties": {
                      "access": {
                        "$ref": "#/components/schemas/url"
                      },
                      "aws": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "aws",
                      "access"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "local",
                    "type": "object",
                    "properties": {
                      "access": {
                        "$ref": "#/components/schemas/url"
                      },
                      "local": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "local",
                      "access"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "store"
            ],
            "additionalProperties": false
          },
          {
            "title": "ipfs",
            "type": "object",
            "properties": {
              "ipfs": {
                "type": "string"
              }
            },
            "required": [
              "ipfs"
            ],
            "additionalProperties": false
          },
          {
            "title": "email",
            "type": "object",
            "properties": {
              "email": {
                "oneOf": [
                  {
                    "title": "sendgrid",
                    "type": "object",
                    "properties": {
                      "sendgrid": {
                        "type": "object",
                        "properties": {
                          "src": {
                            "type": "string"
                          },
                          "dst": {
                            "type": "string"
                          },
                          "subject_prefix": {
                            "type": "string"
                          },
                          "link_template": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "dst",
                          "src"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "sendgrid"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "dev",
                    "type": "string",
                    "enum": [
                      "dev"
                    ]
                  }
                ]
              }
            },
            "required": [
              "email"
            ],
            "additionalProperties": false
          },
          {
            "title": "notarize",
            "type": "object",
            "properties": {
              "notarize": {
                "oneOf": [
                  {
                    "title": "pandora",
                    "type": "object",
                    "properties": {
                      "pandora": {
                        "type": "object",
                        "properties": {
                          "client": {
                            "type": "string"
                          },
                          "api": {
                            "$ref": "#/components/schemas/url"
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "api"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "pandora"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "title": "dev",
                    "type": "object",
                    "properties": {
                      "dev": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "dev"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "notarize"
            ],
            "additionalProperties": false
          }
        ]
      },
      "url": {
        "type": "string",
        "format": "uri"
      },
      "user_address": {
        "title": "user_address",
        "type": "object",
        "properties": {
          "street_number": {
            "type": "string"
          },
          "street_name": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "required": [
          "country",
          "city",
          "postal_code",
          "street_name",
          "street_number"
        ],
        "additionalProperties": false
      },
      "user_auth_email": {
        "title": "user_auth_email",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/auth_id"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "id"
        ],
        "additionalProperties": false
      },
      "user_info": {
        "title": "user_info",
        "oneOf": [
          {
            "title": "company",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "company"
                ]
              },
              "company_name": {
                "type": "string"
              },
              "siren": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/user_address"
              },
              "attributes": {
                "type": "object"
              },
              "qualified": {
                "type": "boolean"
              }
            },
            "required": [
              "country",
              "siren",
              "company_name",
              "kind"
            ],
            "additionalProperties": false
          },
          {
            "title": "individual",
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "individual"
                ]
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "birth_country": {
                "type": "string"
              },
              "birth_city": {
                "type": "string"
              },
              "birthday": {
                "$ref": "#/components/schemas/date"
              },
              "nationality": {
                "type": "string"
              },
              "residence_country": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/user_address"
              },
              "attributes": {
                "type": "object"
              },
              "qualified": {
                "type": "boolean"
              }
            },
            "required": [
              "residence_country",
              "nationality",
              "birthday",
              "birth_city",
              "birth_country",
              "last_name",
              "first_name",
              "kind"
            ],
            "additionalProperties": false
          }
        ]
      },
      "user_payout": {
        "title": "user_payout",
        "type": "object",
        "properties": {
          "payout": {
            "$ref": "#/components/schemas/id"
          },
          "user": {
            "$ref": "#/components/schemas/user_with_email"
          },
          "amount": {
            "type": "number"
          },
          "shares": {
            "type": "integer",
            "minimum": -1073741824,
            "maximum": 1073741823
          },
          "status": {
            "$ref": "#/components/schemas/user_payout_status"
          }
        },
        "required": [
          "status",
          "shares",
          "user",
          "payout"
        ],
        "additionalProperties": false
      },
      "user_payout_status": {
        "title": "user_payout_status",
        "oneOf": [
          {
            "title": "unprocessed",
            "type": "string",
            "enum": [
              "unprocessed"
            ]
          },
          {
            "title": "initiated",
            "type": "object",
            "properties": {
              "initiated": {
                "$ref": "#/components/schemas/tsp"
              }
            },
            "required": [
              "initiated"
            ],
            "additionalProperties": false
          },
          {
            "title": "postponed",
            "type": "object",
            "properties": {
              "postponed": {
                "type": "number"
              }
            },
            "required": [
              "postponed"
            ],
            "additionalProperties": false
          },
          {
            "title": "errored",
            "type": "object",
            "properties": {
              "errored": {}
            },
            "required": [
              "errored"
            ],
            "additionalProperties": false
          },
          {
            "title": "processed",
            "type": "object",
            "properties": {
              "processed": {
                "$ref": "#/components/schemas/payment_id"
              }
            },
            "required": [
              "processed"
            ],
            "additionalProperties": false
          }
        ]
      },
      "user_project_stats": {
        "title": "user_project_stats",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "campaigns": {
            "$ref": "#/components/schemas/uint"
          },
          "orders": {
            "$ref": "#/components/schemas/uint"
          },
          "invested": {
            "type": "number"
          }
        },
        "required": [
          "invested",
          "orders",
          "campaigns",
          "name"
        ],
        "additionalProperties": false
      },
      "user_stats": {
        "title": "user_stats",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/user_project_stats"
        }
      },
      "user_status": {
        "title": "user_status",
        "type": "string",
        "enum": [
          "uninitiated",
          "initiated",
          "kyced",
          "active",
          "blockchained"
        ]
      },
      "user_vote": {
        "title": "user_vote",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "poll": {
            "$ref": "#/components/schemas/poll"
          },
          "tsp": {
            "$ref": "#/components/schemas/tsp"
          },
          "user": {
            "$ref": "#/components/schemas/id"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "choices",
          "user",
          "tsp",
          "poll"
        ],
        "additionalProperties": false
      },
      "user_with_email": {
        "title": "user_with_email",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "info": {
            "$ref": "#/components/schemas/user_info"
          },
          "creation": {
            "$ref": "#/components/schemas/tsp"
          },
          "auth": {
            "$ref": "#/components/schemas/user_auth_email"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_user"
          },
          "kyc": {
            "$ref": "#/components/schemas/kyc"
          },
          "blockchain": {
            "$ref": "#/components/schemas/blockchain_user"
          },
          "status": {
            "$ref": "#/components/schemas/user_status"
          },
          "stats": {
            "$ref": "#/components/schemas/user_stats"
          },
          "pending_orders": {
            "type": "boolean"
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "status",
          "kyc",
          "payment",
          "auth",
          "creation",
          "info"
        ],
        "additionalProperties": false
      },
      "user_with_id": {
        "title": "user_with_id",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "info": {
            "$ref": "#/components/schemas/user_info"
          },
          "creation": {
            "$ref": "#/components/schemas/tsp"
          },
          "auth": {
            "$ref": "#/components/schemas/auth_id"
          },
          "payment": {
            "$ref": "#/components/schemas/payment_user"
          },
          "kyc": {
            "$ref": "#/components/schemas/kyc"
          },
          "blockchain": {
            "$ref": "#/components/schemas/blockchain_user"
          },
          "status": {
            "$ref": "#/components/schemas/user_status"
          },
          "stats": {
            "$ref": "#/components/schemas/user_stats"
          },
          "pending_orders": {
            "type": "boolean"
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "status",
          "kyc",
          "payment",
          "auth",
          "creation",
          "info"
        ],
        "additionalProperties": false
      },
      "users_stats": {
        "title": "users_stats",
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/uint"
          },
          "kyced": {
            "$ref": "#/components/schemas/uint"
          },
          "active": {
            "$ref": "#/components/schemas/uint"
          },
          "blockchained": {
            "$ref": "#/components/schemas/uint"
          },
          "projects": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/uint"
                },
                "count": {
                  "$ref": "#/components/schemas/uint"
                }
              },
              "required": [
                "count",
                "id"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "projects",
          "blockchained",
          "active",
          "kyced",
          "total"
        ],
        "additionalProperties": false
      },
      "vote_input": {
        "title": "vote_input",
        "type": "object",
        "properties": {
          "choices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "choices"
        ],
        "additionalProperties": false
      },
      "zarith": {
        "title": "zarith",
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}